<?xml version="1.0" encoding="UTF-8"?>
<mal:specification xmlns:com="http://www.ccsds.org/schema/COMSchema"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:mal="http://www.ccsds.org/schema/ServiceSchema">
  <mal:area name="MC" number="4" version="1"
            comment="This section details the M&amp;C services; the structures used by the services are detailed in section 4. Both the services and structures are defined in terms of the MO MAL, which is defined in [2], so it is possible to deploy them over any supported protocol and message transport.&#xA;The services defined here are also specified in terms of the COM, which is defined in [3].&#xA;To aid comprehension, several tables are included for each service and operation definition. The table formats are briefly described in section 1.6.3.2 and are the same as those used for the specification of the MO COM services in [3]. &#xA;All service specifications in this document are part of the M&amp;C area, which has a short form number of '4'.&#xA;">
    <mal:service xsi:type="com:ExtendedServiceType" name="Action" number="1"
                 comment="The action service allows consumers to submit an action for execution and to subsequently monitor the execution progress of these actions via the COM activity tracking pattern. The progress of the action is split into two parts, firstly transfer from the consumer to the provider, and secondly execution in the provider. An action is submitted to the provider using the submitAction operation, the progress of which can be monitored using the COM activity tracking pattern, which completes when the action has been delivered to the provider. The action is then executed in the provider which can be also be monitored using the activity tracking pattern. The submitAction operation takes the object instance identifier of the submitted action and uses that to populate the source fields of the activity tracking events. There may be required coordination between action service consumers to ensure the action object instance identifiers are unique, how this is done is outside the scope of this specification however a good approach is the use of a central COM archive as that can provide the unique instance identifiers.&#xA;The nominal sequence of action submission and execution monitoring are shown in Figure 3-1:&#xA;&lt; insert sequence diag here &gt;&#xA;&#xA;The service also includes an operation, preCheckAction, which checks that an action would be accepted for execution without actually submitting it for execution. It is expected to be provided by local action proxies, rather than the remote system, to allow for localised checking of things such as link state, argument values, action safety, before sending the action over long and slow space links.&#xA;The action service defines two types of objects, the first type is the action definition object that holds the description of an action with the list of required/optional arguments. The second type is the action object that holds details of a specific action instance namely a value for each of the arguments of the action.&#xA;&#xA;"
                 requirements="The submitAction operation shall be used to submit a new action instance for execution.&#xA;The COM activity tracking service shall be used to report the transport and execution progress of the submitAction operation&#xA;The COM activity tracking service shall be used to report the release, acceptance and execution progress of the contained action instance.&#xA;">
      <mal:capabilitySet number="1">
        <mal:submitIP name="submitAction" number="1" supportInReplay="false"
                      comment="The submitAction operation allows a consumer to submit an action to a provider for remote execution.&#xA;">
          <mal:messages>
            <mal:submit>
              <mal:field name="defInstId"
                         comment="The defInstId field of the submission shall contain a MAL::Long that is the object instance identifier of the action definition to be used.&#xA;">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="actionInstId"
                         comment="The actionInstId field of the submission shall contain a MAL::Long that is the object instance identifier of the action instance to be used for activity tracking events.&#xA;">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="actionValue"
                         comment="The actionValue part of the submission shall contain the argument values and related information of the action to be executed.&#xA;The operation shall return once the action has been accepted for execution but before execution starts.&#xA;">
                <mal:type name="Action" service="Action" area="MC"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The argument list contains one or more invalid arguments.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="Submitted action is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:requestIP name="preCheckAction" number="2" supportInReplay="false"
                       comment="The preCheckAction operation allows a consumer to check that an action would be successfully accepted for execution without actually submitting it. It is expected to be provided by local action proxies rather than the remote system to allow for quick local checks before sending the action over long and slow space links.&#xA;">
          <mal:messages>
            <mal:request comment="The first part of the submission shall contain a MAL long that is the object instance identifier of the action definition to be used.&#xA;The second part of the submission shall contain the argument values and related information of the action to be executed.&#xA;">
              <mal:type name="Long" area="MAL"/>
              <mal:type name="Action" service="Action" area="MC"/>
            </mal:request>
            <mal:response comment="The returned Boolean shall be set to TRUE if the action would be accepted successfully; otherwise it shall return FALSE.&#xA;">
              <mal:type name="Boolean" area="MAL"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The argument list contains one or more invalid arguments.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="Submitted action is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="listDefinition" number="3" supportInReplay="true"
                       comment="The listDefinition operation allows a consumer to request the object instance identifiers of the action definitions for the supported actions of the provider. It is expected to be used in conjunction with the COM archive which holds the actual action definition objects.&#xA;">
          <mal:messages>
            <mal:request comment="The request shall contain a list of action names to retrieve the ActionDefinition object instance identifiers for.&#xA;The request may contain the wildcard value of '*' to return all supported ActionDefinition objects.&#xA;">
              <mal:type list="true" name="Identifier" area="MAL"/>
            </mal:request>
            <mal:response comment="The response shall contain a list of matching ActionDefinition object instance identifiers.&#xA;The returned list shall maintain the same order as the submitted list unless the wildcard value was included in the request.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:requestIP name="addDefinition" number="4" supportInReplay="false"
                       comment="The addDefinition operation allows a consumer to define one or more actions that do not currently exist. The new ActionDefinition object is expected to be stored in the COM archive by the provider of the action service.&#xA;">
          <mal:messages>
            <mal:request comment="The supplied list shall hold the definitions to be added.&#xA;The name field of the supplied ActionDefinition structures must not be NULL, the wildcard '*', or empty (an INVALID error shall be returned in this case).&#xA;The supplied name must be unique among all ActionDefinition objects for the domain of the provider otherwise a DUPLICATE error shall be raised.&#xA;If an error is raised then no new definitions shall be added as a result of this operation call.&#xA;&#xA;">
              <mal:type list="true" name="ActionDefinition" service="Action" area="MC"/>
            </mal:request>
            <mal:response comment="The response shall contain the list of object instance identifiers for the new definitions.&#xA;The returned list shall maintain the same order as the submitted definitions.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied action definitions contains an invalid action name.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One or more of the action definitions being added has supplied an action name that is already in use in the domain.&#xA;">
              <mal:type name="DUPLICATE" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating request list.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="updateDefinition" number="5" supportInReplay="false"
                      comment="The updateDefinition operation allows a consumer to modify a definition for one or more actions without needing to delete the existing definition first.&#xA;This differs from deleting an existing definition and adding a new definition with the same action name in the fact that the object instance identifier of the definition being modified is not changed therefore it is only expected to be used for minor modifications such as descriptions.&#xA;The operation must not be used to change the name of an existing action definition, removal of the existing definition and adding the new definition must be used in this case.&#xA;The replacement definition should be stored in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The submitted lists shall hold the definitions to be modified.&#xA;The first list shall contain the object instance identifiers of the actions definitions to be updated.&#xA;The second list shall contain the replacement action definitions.&#xA;The two lists shall be ordered the same.&#xA;The supplied object instance identifiers shall match existing definitions, an UNKNOWN error shall be raised if this is not the case.&#xA;Only the description or the unit fields of the arguments shall be permitted to be changed. Any other modification shall cause an INVALID error to be returned.&#xA;If an error is raised then no definitions shall be modified as a result of this operation call.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
              <mal:type list="true" name="ActionDefinition" service="Action" area="MC"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied action definitions is trying to change its action name.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied action definition object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="removeDefinition" number="6" supportInReplay="false"
                      comment="The removeDefinition operation allows a consumer to remove one or more definitions from the list of actions supported by the action provider.&#xA;The operation does not remove the action definition from the COM archive, merely removes it from the provider. This permits existing, and completed, action instances to continue to reference the correct action definition in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The supplied list holds the object instance identifiers of the definitions to be removed from the provider.&#xA;The wildcard value of '0' in the list of object instance identifiers shall be supported and matches all definitions of the provider.&#xA;If a provided definition object instance identifier does not include a wildcard and does not match an existing definition then this operation shall fail with an UNKNOWN error.&#xA;If a matched definition is still being used by an executing action instance then this operation shall not fail because of this reason.&#xA;Removed definitions still exist in the COM archive but shall not be allowed to be referenced by new action instances.&#xA;If an error is raised then no definitions shall be removed as a result of this operation call.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied action definition object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="ActionDefinition" shortFormPart="1"
                       comment="The ActionDefinition structure holds the definition information of an action.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="name" canBeNull="false"
                     comment="The name of the action. Must not be empty or the wildcard value.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="description" canBeNull="false" comment="The description of the action.&#xA;">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="severity" canBeNull="false"
                     comment="Severity of the action. It is implementation specific what the meaning of the severity values are in a particular context.&#xA;">
            <mal:type name="Severity" area="MC"/>
          </mal:field>
          <mal:field name="progressStepCount" canBeNull="false"
                     comment="Total number of steps that will be reported if PROGRESS reporting is selected in the sent Action. 0 if PROGRESS reporting is not used.&#xA;">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="arguments" canBeNull="false" comment="The list of argument definitions.">
            <mal:type list="true" name="ArgumentDefinition" area="MC"/>
          </mal:field>
          <mal:field name="argumentIds"
                     comment="Optional list of argument definition identifiers. Allows the provider to verify that the correct arguments are being supplied when using the same field in the action instance.&#xA;">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="Action" shortFormPart="2"
                       comment="The Action structure holds the information required for an instance of an Action such as the argument values to use.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="stageStartedRequired" canBeNull="false"
                     comment="If TRUE, then an activity event of type Execution is required for the STARTED stage.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="stageProgressRequired" canBeNull="false"
                     comment="If TRUE, then activity events of type Execution are required for the PROGRESS stages.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="stageCompletedRequired" canBeNull="false"
                     comment="If TRUE, then an activity event of type Execution is required for the COMPLETION stage.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="argumentValues"
                     comment="List containing the values of the arguments. The ordering of the list matches that of the definition. If a value for a particular entry is not being supplied, then its position is filled with a NULL value. If no arguments are defined, then the complete list is replaced with a NULL.&#xA;">
            <mal:type list="true" name="AttributeValue" area="MC"/>
          </mal:field>
          <mal:field name="argumentIds"
                     comment="Optional list of argument definition identifiers. Allows the provider to verify that the correct arguments are being supplied. The ordering of the list matches that of the argument list of the action definition.&#xA;">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="isRawValue"
                     comment="Optional list of Booleans that determine whether the supplied argument values are raw or converted. If the Boolean for a particular value is TRUE or null then that value is assumed to be raw. If the complete isConvertedValue list is null then all arguments are assumed to be raw values.&#xA;The ordering of the list matches that of the argument list of the action definition.&#xA;">
            <mal:type list="true" name="Boolean" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="The definitions of the actions shall be represented as ActionDefinition COM objects.&#xA;Instances of an action that are submitted to a provider using the submitAction operation shall be represented as ActionInstance COM object.&#xA;The object instance identifier for an ActionInstance object shall be populated by the consumer.&#xA;The ActionInstance object shall use the related link to indicate which action definition object it uses.&#xA;The source link of the ActionDefinition object should be the object that caused it to be created, most likely a COM OperationActivity object or an operator login in the case of off-line editors being used.&#xA;Instances of an action that are submitted to a provider using the submitAction operation shall link to the submitAction OperationActivity object using the source link.&#xA;The source link of the submitAction OperationActivity object should be the object that caused it to be created, most likely a operator login or automated procedure object.&#xA;">
          <com:object name="ActionDefinition" number="1">
            <com:objectType>
              <mal:type name="ActionDefinition" service="Action" area="MC"/>
            </com:objectType>
          </com:object>
          <com:object name="ActionInstance" number="2">
            <com:objectType>
              <mal:type name="Action" service="Action" area="MC"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Action" area="MC"/>
            </com:relatedObject>
          </com:object>
        </com:objects>
        <com:archiveUsage comment="ActionDefinition objects should be stored in the COM archive.&#xA;When an action is sent with the submitAction operation, the ActionInstance object should be stored in the COM archive by the consumer.&#xA;"/>
        <com:activityUsage comment="The COM Activity service should be used to monitor the transfer and execution of the submitAction operation.&#xA;The COM Activity service should be used to monitor the transfer and execution of action instances.&#xA;The COM activity events shall be generated as defined in the COM activity tracking service for the submitAction operation.&#xA;A Release activity event for the action instance shall be generated when an action is released from a consumer using the submitAction operation.&#xA;An Acceptance activity event for the action instance shall be generated when an action is received by the destination provider and after any pre-execution checks being perormed as part of the submitAction operation.&#xA;The source link of the activity events for the action instance shall be the ActionInstance object.&#xA;The related link of the activity events for the action instance shall be set to NULL.&#xA;In all activity execution events for the action instance the ActivityExecution.stageCount field shall be set to 2 plus the total number of progress stages.&#xA;In the activity execution event, when notification of an action starting is requested, the ActivityExecution.executionStage field shall be set to 1.&#xA;In the activity execution event, when notification of an action progress is requested, the ActivityExecution.executionStage field shall be set to 1 plus the current progress stage. &#xA;In the activity execution event, when notification of an action completion is requested, the ActivityExecution.executionStage field shall be set to 2 plus the total number of progress stages.&#xA;&#xA;"/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Parameter" number="2"
                 comment="The parameter service allows the user to subscribe to parameter value updates and optionally be able to set new values. A single PUBSUB operation is provided for monitoring and publishing of parameter values.&#xA;A parameter values also contains a calculation of the validity of the parameter, the flow chart for this calculation is provided in Figure x-x:&#xA;&lt;&lt; validity calculation flow chart &gt;&gt;&#xA;&#xA;The generation of value updates can be controlled using the enableGeneration operation, which supports the use of groups. Groups must reference parameter definitions only.&#xA;The parameter service does not include any value checking, this is delegated to the check service.&#xA;Parameter definitions are maintained using the operations defined in this service but storage of definitions is delegated to the COM archive.&#xA;"
                 requirements="The generation of updates to the parameter shall be controlled by the generationEnabled Boolean value in the ParameterDefinition.&#xA;Setting the generationEnabled field to TRUE shall enable generation of updates for a specific parameter.&#xA;If a parameter is required to send periodic updates then the time between these updates shall be controlled using the updateInterval Duration value in the ParameterDefinition.&#xA;An updateInterval value of '0' shall mean no periodic updates shall be sent; updates must be triggered by another implementation-specific mechanism in this case.&#xA;The generationEnabled values can be set by using the enableGeneration operation.&#xA;The generationEnabled and updateInterval values can be set by using the updateDefinition operation.&#xA;For onboard parameters, the interval should be a multiple of the minimum sampling interval of those parameters.&#xA;If an interval that is not supported by the provider is requested, then an INVALID error shall be returned, and the change rejected.&#xA;If the parameter is periodic and reported via a periodic aggregation, and a new update has not been received in the aggregation period, then the validity shall be set to EXPIRED.&#xA;If the parameter raw value cannot be obtained, or calculated for synthetic parameters, then the validity state shall be INVALID_RAW and the raw value set to NULL.&#xA;If the validityExpression field of a parameter definition is not NULL then the validity of the parameter shall be determined by evaluating the expression.&#xA;If the validityExpression field is NULL and the parameter definition either does not contain a conversion or the conversion is successful, then the validity state shall be VALID unless it is EXPIRED.&#xA;If the validityExpression field is NULL and the conversion of the parameter value fails (for example an unexpected value for a discrete conversion), then the validity state shall be VALID_RAW_ONLY unless it is EXPIRED.&#xA;If the entities used to determine the expression are not VALID, then the validity state shall be UNVERIFIED.&#xA;If the validity expression evaluates to FALSE, then the validity state shall be set to INVALID.&#xA;If the validity expression evaluates to TRUE and the parameter definition either does not contain a conversion or the conversion is successful, then the validity state shall be set to VALID.&#xA;If the validity expression evaluates to TRUE and the conversion of the parameter value fails then the validity shall be set to VALID_RAW_ONLY.&#xA;If the validity of the parameter is VALID_RAW_ONLY then the convertedValue of the parameter value shall be set to NULL.&#xA;If the validity of the parameter is either UNVERIFIED or INVALID and the parameter definition contains a conversion, then the convertedValue of the parameter value shall contain the converted value.&#xA;It is supported that other, implementation specific, mechanisms may be used to determine parameter validity.&#xA;">
      <mal:capabilitySet number="1">
        <mal:pubsubIP name="monitorValue" number="1" supportInReplay="true"
                      comment="The monitorValue operation allows a consumer to subscribe for parameter value updates.&#xA;">
          <mal:messages>
            <mal:publishNotify comment="The MAL EntityKey.firstSubKey shall contain the parameter name.&#xA;The MAL EntityKey.secondSubKey shall contain the parameter definition object instance identifier.&#xA;The MAL EntityKey.thirdSubKey shall contain the parameter value object instance identifier.&#xA;The MAL EntityKey.fourthSubKey shall be NULL.&#xA;The timestamp of the parameter value update shall be taken from the publish message.&#xA;The publish message shall include the ObjectId of the source link of the update.&#xA;If no source link is needed then the ObjectId shall be replaced with a NULL.&#xA;The second part of the publish message shall be the parameter update value.&#xA;">
              <mal:type name="ObjectId" area="COM"/>
              <mal:type name="ParameterValue" service="Parameter" area="MC"/>
            </mal:publishNotify>
          </mal:messages>
        </mal:pubsubIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="getValue" number="2" supportInReplay="true"
                       comment="The getValue operation returns the latest value for a requested parameter.&#xA;">
          <mal:messages>
            <mal:request comment="The request shall include a list of parameter definition object instance identifiers.&#xA;The wildcard value of '0' shall be supported and matches all parameters of the provider.&#xA;If a request parameter is unknown then an UNKNOWN error shall be returned.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:request>
            <mal:response comment="The response shall contain a list of returned parameter definition object instance identifiers and a matching list of parameter values.&#xA;&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
              <mal:type list="true" name="ParameterValue" service="Parameter" area="MC"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the requested parameters is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:submitIP name="setValue" number="3" supportInReplay="false"
                      comment="The setParameterValue operation allows a consumer to set a parameter value for one or more parameters.&#xA;">
          <mal:messages>
            <mal:submit>
              <mal:field name="paramDefInstId"
                         comment="The submitted lists shall hold the parameter definition identifier and the respective value to be set.&#xA;The paramDefInstId list shall contain the object instance identifiers of the parameter definitions to be set.&#xA;">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="newValues"
                         comment="The newValues list shall contain the new parameter values to be set.&#xA;If the parameter definition does not have a conversion associated with it then the converted value supplied must be NULL.&#xA;If a request parameter is unknown then an UNKNOWN error shall be returned.&#xA;If the supplied new parameter raw value does not match the defined type for the parameter definition then an INVALID error shall be returned.&#xA;If a converted value is supplied and it does not match the defined converted type, or there is no conversion defined for the parameter definition then an INVALID error shall be returned.&#xA;If an error is raised then no modifications shall be made as a result of this operation call.&#xA;">
                <mal:type list="true" name="ParameterValue" service="Parameter" area="MC"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the referenced parameters is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied parameter values contains an invalid value.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4">
        <mal:submitIP name="enableGeneration" number="4" supportInReplay="false"
                      comment="The enableGeneration operation allows a consumer to control whether updates for specific parameters are generated or not. It allows the consumer to select the parameters directly or indirectly using groups.&#xA;">
          <mal:messages>
            <mal:submit comment="The first part of the request shall be a Boolean indicating whether the supplied object instance identifiers are group objects or parameter objects.&#xA;If the initial Boolean is TRUE then the object instance identifiers are group identifiers, otherwise they shall be Parameter Definition identifiers.&#xA;The request shall include a list of object instance identifiers and Boolean value pairs.&#xA;The wildcard value of '0' in the list of object instance identifiers shall be supported and matches all parameters of the provider.&#xA;The service provide shall check for the wildcard value in the list of object instance identifiers first and if found no other checks of supplied object instance identifiers shall be made.&#xA;For the Boolean value in the InstanceBooleanPair a value of TRUE requests that updates of the parameter shall be generated, a value of FALSE requests that updates shall not be generated.&#xA;If the current generation enabled value of a matched parameter definition is the same as the supplied value no error shall be generated. i.e. enabling an already enabled parameter will not raise an error.&#xA;If a requested parameter or group is unknown then an UNKNOWN error shall be returned.&#xA;If a requested group does not contain parameter definition objects then an INVALID error shall be returned.&#xA;If an error is raised then no modifications shall be made as a result of this operation call.&#xA;The provider should update the parameter definition in the COM archive if the generation enabled value is changed.&#xA;">
              <mal:type name="Boolean" area="MAL"/>
              <mal:type list="true" name="InstanceBooleanPair" area="COM"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the requested parameters is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied groups is not a group of parameter definitions.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5">
        <mal:requestIP name="listDefinition" number="5" supportInReplay="true"
                       comment="The listDefinition operation allows a consumer to request the object instance identifiers of the parameter definitions for the supported parameters of the provider. It is expected to be used in conjunction with the COM archive which holds the actual parameter definition objects.&#xA;">
          <mal:messages>
            <mal:request comment="The request shall contain a list of parameter names to retrieve the parameter definition object instance identifiers for.&#xA;The request may contain the wildcard value of '*' to return all supported parameter definitions.&#xA;">
              <mal:type list="true" name="Identifier" area="MAL"/>
            </mal:request>
            <mal:response comment="The response shall contain a list of matching parameter definition object instance identifiers.&#xA;The returned list shall maintain the same order as the submitted list unless the wildcard value was included in the request.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="6">
        <mal:requestIP name="addDefinition" number="6" supportInReplay="false"
                       comment="The addDefinition operation allows a consumer to define one or more parameters that do not currently exist.&#xA;The new parameter definition is expected to be stored in the COM archive by the provider of the parameter service.&#xA;">
          <mal:messages>
            <mal:request comment="The supplied list shall hold the definitions to be added.&#xA;The name field of the supplied ParameterDefinition structures must not be NULL, the wildcard '*', or empty (an INVALID error shall be returned in this case).&#xA;The supplied name must be unique among all ParameterDefinition objects for the domain of the provider otherwise a DUPLICATE error shall be raised.&#xA;If an error is raised then no new definitions shall be added as a result of this operation call.&#xA;">
              <mal:type list="true" name="ParameterDefinition" service="Parameter" area="MC"/>
            </mal:request>
            <mal:response comment="The response shall contain the list of object instance identifiers for the new definitions.&#xA;The returned list shall maintain the same order as the submitted definitions.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied parameter definitions contains an invalid name.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One or more of the parameter definitions being added has supplied a parameter name that is already in use in the domain.&#xA;">
              <mal:type name="DUPLICATE" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating request list.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="updateDefinition" number="7" supportInReplay="false"
                      comment="The updateDefinition operation allows a consumer to modify a definition for one or more parameters without needing to delete the existing definition first.&#xA;This differs from deleting an existing definition and adding a new definition with the same parameter name in the fact that the object instance identifier is not changed between the two definitions therefore it is only expected to be used for minor modifications such as descriptions.&#xA;The operation cannot be used to change the name of an existing parameter definition, removal of the existing definition and adding the new definition must be used in this case.&#xA;The replacement definition should be stored in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The submitted lists shall hold the definitions to be modified.&#xA;The first list shall contain the object instance identifiers of the parameter definitions to be updated.&#xA;The second list shall contain the replacement parameter definitions.&#xA;The two lists shall be ordered the same.&#xA;The supplied object instance identifiers shall match existing definitions, an UNKNOWN error shall be raised if this is not the case.&#xA;Only the description, the raw unit, generationEnabled, or updateInterval fields shall be permitted to be changed. Any other modification shall cause an INVALID error to be returned.&#xA;If an error is raised then no definitions shall be updated as a result of this operation call.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
              <mal:type list="true" name="ParameterDefinition" service="Parameter" area="MC"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied parameter definitions is trying to change its name.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied parameter definition object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="removeDefinition" number="8" supportInReplay="false"
                      comment="The removeDefinition operation allows a consumer to remove one or more definitions from the list of parameters supported by the parameter provider.&#xA;The operation does not remove the parameter definition from the COM archive, merely removes it from the provider. This permits existing parameter values to continue to reference the correct parameter definition in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The supplied list holds the object instance identifiers of the definitions to be removed from the provider.&#xA;The list may contain the wildcard value of '0'.&#xA;If a provided definition object instance identifier does not include a wildcard and does not match an existing definition then this operation shall fail with an UNKNOWN error.&#xA;Removed definitions still exist in the COM archive.&#xA;If an error is raised then no definitions shall be removed as a result of this operation call.&#xA;If the operation succeeds then the provider shall not publish parameter values for the deleted parameter definitions anymore.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied parameter definition object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:enumeration name="Validity" shortFormPart="3"
                         comment="Validity is an enumeration representing the possible validity states of a parameter.&#xA;">
          <mal:item value="INVALID" nvalue="1"
                    comment="The validity expression has been evaluated to FALSE."/>
          <mal:item value="INVALID_RAW" nvalue="2"
                    comment="The raw value cannot be obtained or calculated.&#xA;"/>
          <mal:item value="VALID" nvalue="3"
                    comment="The validity expression either has been evaluated to TRUE, or there is no expression defined. If the parameter definition containing the validity expression contains a conversion, then this has succeeded also.&#xA;"/>
          <mal:item value="VALID_RAW_ONLY" nvalue="4"
                    comment="The validity expression either has evaluated to TRUE or there is no validity defined, but the converted value of the parameter definition containing the validity expression has failed conversion.&#xA;"/>
          <mal:item value="UNVERIFIED" nvalue="5"
                    comment="The validity of the validity expression has been evaluated to FALSE and therefore cannot be used to verify the current value.&#xA;"/>
          <mal:item value="EXPIRED" nvalue="6"
                    comment="The parameter has a time out associated which has expired.&#xA;"/>
        </mal:enumeration>
        <mal:composite name="ParameterDefinition" shortFormPart="1"
                       comment="The ParameterDefinition structure holds a parameter definition. The conversion field defines the conditions where the relevant conversion is applied. For onboard parameters, the update interval should be a multiple of the minimum sampling interval of that parameter.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="name" canBeNull="false"
                     comment="The name of the parameter. Must not be empty or the wildcard value.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="description" canBeNull="false"
                     comment="The description of the parameter. May be empty.&#xA;">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="rawType" canBeNull="false"
                     comment="Holds the attribute short form part of the raw type of the parameter, e.g., for a MAL::String parameter it shall hold 15.&#xA;">
            <mal:type name="Octet" area="MAL"/>
          </mal:field>
          <mal:field name="rawUnit"
                     comment="The unit for the raw value. If NULL then raw type has no unit.&#xA;">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="generationEnabled" canBeNull="false"
                     comment="Controls whether updates for this parameter are to be generated.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="updateInterval" canBeNull="false"
                     comment="Periodic update interval. No periodic updates to be generated if this is set to '0'.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="validityExpression"
                     comment="Expression that determines this parameter's validity state. Can be NULL if no validity check is required or validity is calculated by implementation-specific mechanisms.&#xA;">
            <mal:type name="ParameterExpression" area="MC"/>
          </mal:field>
          <mal:field name="conversion" comment="If present then parameter has a converted type.&#xA;">
            <mal:type name="ParameterConversion" service="Parameter" area="MC"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ParameterValue" shortFormPart="2"
                       comment="This structure holds a specific time-stamped value of the parameter. The type of the value shall match that specified in the parameter definition.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="validityState" canBeNull="false" comment="The parameter validity state.">
            <mal:type name="Validity" service="Parameter" area="MC"/>
          </mal:field>
          <mal:field name="rawValue"
                     comment="The parameter raw value. The value of NULL is a valid value and carries no special significance in the parameter service.&#xA;">
            <mal:type name="Attribute" area="MAL"/>
          </mal:field>
          <mal:field name="convertedValue" comment="The parameter converted value.&#xA;">
            <mal:type name="Attribute" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ParameterConversion" shortFormPart="4"
                       comment="The ParameterConversion structure holds information about the conversions to be applied to a parameter.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="convertedType" canBeNull="false"
                     comment="Holds the attribute short form part of the converted type of the parameter, e.g., for a MAL::String parameter it shall hold 15.&#xA;">
            <mal:type name="Octet" area="MAL"/>
          </mal:field>
          <mal:field name="convertedUnit"
                     comment="The converted parameter unit. If NULL then converted type has no unit.&#xA;">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="checkConverted" canBeNull="false"
                     comment="If checks are associated to this parameter using the check service, if this value is TRUE, then they should check the converted value; otherwise they should check the raw value. This field is ignored if no checks are associated to this parameter.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="conversionConditions" canBeNull="false"
                     comment="The conversions to be applied.&#xA;">
            <mal:type list="true" name="ConditionalReference" area="MC"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="The definitions of the parameters shall be represented as ParameterDefinition COM objects.&#xA;Parameter value updates shall be represented as ParameterValue COM objects.&#xA;The ParameterValue object shall use the related link to indicate which ParameterDefinition object it uses.&#xA;The source link of the ParameterDefinition object should be the object that caused it to be created, most likely a COM OperationActivity object or an operator login in the case of off-line editors being used.&#xA;The source link of the ParameterValue object should be the object that caused the update to be generated.&#xA;The source link of the ParameterValue object shall be NULL for periodic updates.&#xA;">
          <com:object name="ParameterDefinition" number="1">
            <com:objectType>
              <mal:type name="ParameterDefinition" service="Parameter" area="MC"/>
            </com:objectType>
          </com:object>
          <com:object name="ParameterValue" number="2">
            <com:objectType>
              <mal:type name="ParameterValue" service="Parameter" area="MC"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Parameter" area="MC"/>
            </com:relatedObject>
          </com:object>
        </com:objects>
        <com:archiveUsage comment="ParameterDefinition objects should be stored in the COM archive.&#xA;When a parameter value update is published, the ParameterValue object should be stored in the COM archive.&#xA;"/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Alert" number="3"
                 comment="The alert service defines the structures and patterns for the publishing and monitoring of alerts. The alert service uses COM event service to monitor and publish alert events.&#xA;The generation of alerts can be controlled using the enableGeneration operation, which supports the use of groups. Groups must reference alert definitions only.&#xA;Alert definitions are maintained using the operations defined in this service but storage of definitions is delegated to the COM archive.&#xA;"
                 requirements="The generation of alerts shall be controlled by the generationEnabled Boolean value in the AlertDefinition.&#xA;Setting the generationEnabled field to TRUE shall enable generation of instances of that alert.&#xA;The generationEnabled value can be set by using either the enableGeneration or updateDefinition operations.&#xA;The alert instances shall be published as events using the COM event operations.&#xA;">
      <mal:capabilitySet number="1">
        <mal:submitIP name="enableGeneration" number="1" supportInReplay="false"
                      comment="The enableGeneration operation allows a consumer to control whether updates for specific alerts are generated or not. It allows the consumer to select the alerts directly or indirectly using groups.&#xA;">
          <mal:messages>
            <mal:submit comment="The first part of the request shall be a Boolean indicating whether the supplied object instance identifiers are group objects or alert objects.&#xA;If the initial Boolean is TRUE then the object instance identifiers are group identifiers, otherwise they shall be alert identifiers.&#xA;The request shall include a list of object instance identifiers and Boolean value pairs.&#xA;The wildcard value of '0' in the list of object instance identifiers shall be supported and matches all alerts of the provider.&#xA;The service provide shall check for the wildcard value in the list of object instance identifiers first and if found no other checks of supplied object instance identifiers shall be made.&#xA;For the Boolean value in the InstanceBooleanPair a value of TRUE requests that updates of the alert shall be generated, a value of FALSE requests that updates will not be generated.&#xA;If the current generation enabled value of a matched alert definition is the same as the supplied value no error shall be generated. i.e. enabling an already enabled alert will not raise an error.&#xA;If a requested alert or group is unknown then an UNKNOWN error shall be returned.&#xA;If a requested group does not contain alert objects then an INVALID error shall be returned.&#xA;If an error is raised then no modifications shall be made as a result of this operation call.&#xA;The provider should update the alert in the COM archive if the generationEnabled value is changed.&#xA;">
              <mal:type name="Boolean" area="MAL"/>
              <mal:type list="true" name="InstanceBooleanPair" area="COM"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied groups is not a group of alerts.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One or more of the requested alerts is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="listDefinition" number="2" supportInReplay="true"
                       comment="The listDefinition operation allows a consumer to request the object instance identifiers of the alert definitions for the supported alerts of the provider. It is expected to be used in conjunction with the COM archive which holds the actual alert definition objects.&#xA;">
          <mal:messages>
            <mal:request comment="The request shall contain a list of alert names to retrieve the alert definition object instance identifiers for.&#xA;The request may contain the wildcard value of '*' to return all supported alert definitions.&#xA;">
              <mal:type list="true" name="Identifier" area="MAL"/>
            </mal:request>
            <mal:response comment="The response shall contain a list of matching alert definition object instance identifiers.&#xA;The returned list shall maintain the same order as the submitted list unless the wildcard value was included in the request.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:requestIP name="addDefinition" number="3" supportInReplay="false"
                       comment="The addDefinition operation allows a consumer to define one or more alerts that do not currently exist.&#xA;The new AlertDefinition objects are expected to be stored in the COM archive by the provider of the alert service.&#xA;">
          <mal:messages>
            <mal:request comment="The supplied list shall hold the definitions to be added.&#xA;The name field of the supplied AlertDefinition structures must not be NULL, the wildcard '*', or empty (an INVALID error shall be returned in this case).&#xA;The supplied name must be unique among all AlertDefinition objects for the domain of the provider otherwise a DUPLICATE error shall be raised.&#xA;If an error is raised then no new definitions shall be added as a result of this operation call.&#xA;">
              <mal:type list="true" name="AlertDefinition" service="Alert" area="MC"/>
            </mal:request>
            <mal:response comment="The response shall contain the list of object instance identifiers for the new AlertDefinition objects.&#xA;The returned list shall maintain the same order as the submitted definitions.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the alert definitions being added has supplied an alert name that is already in use in the domain.&#xA;">
              <mal:type name="DUPLICATE" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating request list.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied alert definitions contains an invalid name.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="updateDefinition" number="4" supportInReplay="false"
                      comment="The updateDefinition operation allows a consumer to modify a definition for one or more alerts without needing to delete the existing definition first.&#xA;This differs from deleting an existing definition and adding a new definition with the same alert name in the fact that the object instance identifier is not changed between the two definitions therefore it is only expected to be used for minor modifications such as descriptions.&#xA;The operation cannot be used to change the name of an existing alert definition, removal of the existing definition and adding the new definition must be used in this case.&#xA;The replacement definition should be stored in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The submitted lists shall hold the definitions to be modified.&#xA;The first list shall contain the object instance identifiers of the alert definitions to be updated.&#xA;The second list shall contain the replacement alert definitions.&#xA;The two lists shall be ordered the same.&#xA;The supplied object instance identifiers shall match existing definitions, an UNKNOWN error shall be raised if this is not the case.&#xA;Only the description, the argument units, of the generationEnabled fields shall be permitted to be changed. Any other modification shall cause an INVALID error to be returned.&#xA;If an error is raised then no definitions shall be updated as a result of this operation call.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
              <mal:type list="true" name="AlertDefinition" service="Alert" area="MC"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied alert definitions is trying to change its name.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied alert definition object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="removeDefinition" number="5" supportInReplay="false"
                      comment="The removeDefinition operation allows a consumer to remove one or more definitions from the list of alerts supported by the alert provider.&#xA;The operation does not remove the alert definition from the COM archive, merely removes it from the provider. This permits existing alert instances to continue to reference the correct alert definition in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The supplied list holds the object instance identifiers of the definitions to be removed from the provider.&#xA;The list may contain the wildcard value of '0'.&#xA;If a provided definition object instance identifier does not include a wildcard and does not match an existing definition then this operation shall fail with an UNKNOWN error.&#xA;Removed definitions still exist in the COM archive.&#xA;If an error is raised then no definitions shall be removed as a result of this operation call.&#xA;If the operation succeeds then the provider shall not publish alert instances for the deleted alert definitions anymore.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied alert definition object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="AlertDefinition" shortFormPart="1"
                       comment="The AlertDefinition provides the definition of an alert including any argument definitions.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="name" canBeNull="false"
                     comment="Alert name. Must not be empty or wildcard value.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="description" canBeNull="false" comment="The description of the alert.&#xA;">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="severity" canBeNull="false" comment="Severity of the alert.&#xA;">
            <mal:type name="Severity" area="MC"/>
          </mal:field>
          <mal:field name="generationEnabled" canBeNull="false"
                     comment="Controls whether instances of this alert are to be generated.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="arguments" canBeNull="false" comment="The list of argument definitions.">
            <mal:type list="true" name="ArgumentDefinition" area="MC"/>
          </mal:field>
          <mal:field name="argumentIds"
                     comment="Optional list of argument definition identifiers. Allows the provider to verify that the correct arguments are being supplied.">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="AlertEvent" shortFormPart="2"
                       comment="The AlertEvent structure holds an instance of an alert defined using an AlertDefinition.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="argumentValues"
                     comment="List containing the values of the arguments. The ordering of the list matches that of the definition. If a value for a particular entry is not being supplied, then its position is filled with a NULL value. If no arguments are defined, then the complete list is replaced with a NULL.&#xA;">
            <mal:type list="true" name="ArgumentValue" area="MC"/>
          </mal:field>
          <mal:field name="argumentIds"
                     comment="Optional list of argument definition identifiers. Allows the consumer to verify that the correct arguments are being supplied. The ordering of the list matches that of the argument list of the alert definition.&#xA;">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="The definitions of the alerts shall be represented as AlertDefinition COM objects.&#xA;Instances of an alert shall be represented as an AlertEvent COM event.&#xA;The AlertEvent object shall use the related link to indicate which AlertDefinition object it uses.&#xA;The source link of the AlertDefinition object should be the object that caused it to be created, most likely a COM OperationActivity object or an operator login in the case of off-line editors being used.&#xA;">
          <com:object name="AlertDefinition" number="1">
            <com:objectType>
              <mal:type name="AlertDefinition" service="Alert" area="MC"/>
            </com:objectType>
          </com:object>
        </com:objects>
        <com:events comment="When an alert is generated it shall be represented as a COM event.&#xA;The event shall be published using the COM event service.&#xA;The source link of the alert event shall point to the object that caused the event to be generated.&#xA;">
          <com:event name="AlertEvent" number="2"
                     comment="The AlertEvent shall be raised when an enabled alert is published.&#xA;">
            <com:objectType>
              <mal:type name="AlertEvent" service="Alert" area="MC"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Alert" area="MC"/>
            </com:relatedObject>
            <com:sourceObject comment="The source of the Alert.&#xA;"/>
          </com:event>
        </com:events>
        <com:archiveUsage comment="AlertDefinition objects should be stored in the COM archive.&#xA;When an alert event is published, the AlertEvent object should be stored in the COM archive by the publisher.&#xA;"/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Check" number="4"
                 comment="The check service allows the user to monitor and control the checking of parameters against check definitions including limit sets.&#xA;The check service uses COM event service to monitor and publish check evaluation result events.&#xA;The check service allows the consumer to define each check and then link the check definition to a parameter to be checked. Figure 3-3 shows the nominal sequence of operations for the check service:&#xA;---- check sequence diag ----&#xA;Check service nominal sequence&#xA;A check consumer firstly subscribes for check events before linking some already existing checks to some parameters. The figure shows how check evaluation is normally triggered by either an expiration of a periodic interval or a change in the monitored value, however, the service also supports the optional ability for consumers to trigger the evaluation of checks using the triggerCheck operation. Finally if a check event has not been generated for a configurable period of time, known as the maximum reporting interval, an event is generated regardless of whether the check is in violation or not. This maximum reporting interval supports the situation where regular confirmation of the non-violating state of a check is required.&#xA;The list of currently violating checks can be obtained using the getCurrentTransitionList operation; to get a full report including non-violating checks the getSummaryReport operation should be used.&#xA;The following figure (3-4) shows the flow chart for determining the status of a check:&#xA;--- check state diag -- &#xA;Flow Chart for Determining the Status of a Check&#xA;Each time a check is evaluated, the procedure indicated in the flow chart depicted in figure 3-4 is performed to calculate the check result. Each check link can have a condition included as part of it which determines whether the check should be applied or not; this allows several checks to be associated to a single parameter and applied in different conditions.&#xA;The service defines four basic check types, constant, reference, delta, and limit. A constant check is used to ensure that a parameter value either does not change or does not change from a set of specific values.&#xA;In the Reference and Delta checks, a value is compared against another value which serves as a reference value. The reference value can be taken from either another parameter or the parameter being checked, and can be the previous value or a value in the past, specified by using a delta time in the ReferenceValue composite. This does not affect the logic of the flow chart above.&#xA;The final check type, limit, checks to see if a parameter value is either inside or outside a range of values.&#xA;The service only publishes check results (as check transition events) when either the result changes from the previous value (for example a check starts to violate), or the maximum reporting interval expires. This reduces the amount of 'no change' reporting data being distributed. For situations where regular reporting of the check result is required, even when no change is detected, a low maximum reporting interval value should be specified.&#xA;"
                 requirements="The addParameterCheck operation shall be used to create a link between a check definition and the parameter to be checked.&#xA;Check evaluation shall be controlled by the checkEnabled Boolean value in the check link.&#xA;Setting the checkEnabled field to TRUE shall enable check evaluation for a specific check link.&#xA;The checkEnabled value may be set by using the enableCheck operation.&#xA;If the checkOnChange value is TRUE, any change in the state (such as validity becoming VALID) or value of a parameter shall cause an evaluation of the parameter value against the check.&#xA;If the checkOnChange value is TRUE, any change in the state (such as validity becoming VALID or the value) of the parameter referenced by a check condition shall cause an evaluation of the parameter value against the check.&#xA;If a check is required to be evaluated periodically, then the time between these evaluations shall be controlled using the checkInterval Duration value in the check link.&#xA;For periodic check evaluations to occur the checkOnChange value must be FALSE, it is not possible to request periodic and change based checking concurrently.&#xA;A checkInterval value of '0' shall mean that no periodic check evaluation shall be performed, and checks will be triggered by another mechanism in this case.&#xA;The checkInterval value shall only be set when the check link is created.&#xA;If an interval that is not supported by the provider is requested, then an INVALID error shall be returned, and the change shall be rejected.&#xA;The check shall be evaluated if the check link is enabled, the check condition as defined in the check link evaluates to TRUE, and the checked parameter is in a valid state.&#xA;The check execution may also be triggered by the triggerCheck operation.&#xA;If there is a change in the result of the check evaluation then a check transition event shall be published.&#xA;For a limit, reference, or constant value check, only when the correct number of successive valid samples of the checked parameter (including the current one) have consistently failed (or consistently passed) the check a new check result shall be calculated.&#xA;For a delta check, once the correct number of successive valid samples of the checked parameter have been accumulated, a new mean delta value shall be evaluated and checked.&#xA;For percentage based delta thresholds, the percentage is calculated as the arithmetic difference between successive valid samples of the parameter value divided by the number of seconds between samples, as a percentage of the first valid sample where the value 1.0 is 100 percent. For example, if the first value is 8, the second sample 14, and the number of seconds between them is 2, then the calculation is ((14 - 8) / 2) / 8 or 0.375 or 37.5%.&#xA;The result of constant or reference check evaluation shall be used to populate the checkEvaluation fields of the check result.&#xA;The result of limit or delta check shall be set to FALSE if the lower limit is violated or TRUE if the upper limited is violated and used to populate the checkEvaluation fields of the check result.&#xA;If the maxReportingInterval is not zero and if a check result has not been generated in that time a check result with the current check states shall be generated.&#xA;The maxReportingInterval value shall be set by using the updateDefinition operation.&#xA;Each check-state transition shall cause the generation of a check result and a check transition event.&#xA;">
      <mal:capabilitySet number="1">
        <mal:progressIP name="getCurrentTransitionList" number="1" supportInReplay="true"
                        comment="The getCurrentTransitionList operation allows a consumer to obtain the current result of a number of checks filtering on check state.&#xA;">
          <mal:messages>
            <mal:progress comment="The supplied CheckResultFilter shall contain a set of object instance identifiers for which the check result is required.&#xA;The CheckResultFilter shall also contain a list of CheckState enumerations of which states to filter on.&#xA;The supplied lists shall be combined to form the complete filter.&#xA;To report all checks, the wildcard values may be used in the CheckResultFilter.&#xA;If a CheckLink object matches any of the supplied filters, and its current state matches any of the supplied CheckState enumerations, then its latest CheckResult value shall be returned.&#xA;&#xA;">
              <mal:type name="CheckResultFilter" service="Check" area="MC"/>
            </mal:progress>
            <mal:acknowledgement/>
            <mal:update comment="The returned list shall contain an entry for each matched check returning the object instance identifier and current CheckResult for that check link object.&#xA;">
              <mal:type list="true" name="CheckSummary" service="Check" area="MC"/>
            </mal:update>
            <mal:response comment="The PROGRESS pattern is used to allow the possibly large list of current violations to be split into several updates.&#xA;">
              <mal:type list="true" name="CheckSummary" service="Check" area="MC"/>
            </mal:response>
          </mal:messages>
        </mal:progressIP>
        <mal:progressIP name="getSummaryReport" number="2" supportInReplay="true"
                        comment="The getSummaryReport operation allows a consumer to obtain the status of a number of checks definitions and the result of any check evaluations linked to them.&#xA;">
          <mal:messages>
            <mal:progress comment="The supplied list shall hold one or more check definition object instance identifiers of which a check report is required.&#xA;An empty list shall report on all definitions.&#xA;If a requested definition is unknown then an UNKNOWN error shall be returned.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:progress>
            <mal:acknowledgement/>
            <mal:update comment="The returned updates and final response shall contain an entry for each requested check definition.&#xA;The first part of the update shall be the check definition object instance identifier.&#xA;The second part shall be the list of all check link details and check results associated with that check definition.&#xA;">
              <mal:type name="Long" area="MAL"/>
              <mal:type list="true" name="CheckSummary" service="Check" area="MC"/>
            </mal:update>
            <mal:response>
              <mal:type name="Long" area="MAL"/>
              <mal:type list="true" name="CheckSummary" service="Check" area="MC"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the checks specified in the list do not exist.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:progressIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:submitIP name="triggerCheck" number="3" supportInReplay="false"
                      comment="The triggerCheck operation allows a consumer to request the immediate evaluation of a number of checks. Any violations will cause appropriate events to be generated.&#xA;">
          <mal:messages>
            <mal:submit comment="The submission shall contain two lists of object instance identifiers.&#xA;The first list shall be a list of check definition object instance identifiers to trigger the evaluation of all linked checks.&#xA;The second list shall be a list of check link object instance identifiers to trigger the evaluation of all specified checks.&#xA;The wildcard value of '0' shall be permitted in either list.&#xA;The two lists shall be combined using 'OR' logic, where a check is evaluated if its definition is in the first list or it is directly listed in the second list.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:submit>
          </mal:messages>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:submitIP name="enableCheck" number="4" supportInReplay="false"
                      comment="The enableCheck operation allows a consumer to control whether evaluation of a set of checks is performed or not. It allows the consumer to select the checks directly or indirectly using groups.&#xA;">
          <mal:messages>
            <mal:submit comment="The first part of the request shall be a Boolean indicating whether the supplied object instance identifiers are group objects or CheckLink objects.&#xA;If the initial Boolean is TRUE then the object instance identifiers are group identifiers, otherwise they shall be CheckLink object instance identifiers.&#xA;The request shall include a list of group or CheckLink object instance identifiers and Boolean value pairs.&#xA;The wildcard value of '0' in the list of object instance identifiers shall be supported and matches all check links of the provider.&#xA;The service provide shall check for the wildcard value in the list of object instance identifiers first and if found no other checks of supplied object instance identifiers shall be made.&#xA;For the Boolean value in the InstanceBooleanPair a value of TRUE requests that evaluations of the link shall be performed, a value of FALSE requests that evaluations will not be performed.&#xA;If a requested link or group is unknown then an UNKNOWN error shall be returned.&#xA;If a requested group does not contain either check definition or check link objects then an INVALID error shall be returned.&#xA;If an error is raised then no modifications shall be made as a result of this operation call.&#xA;The provider should update the check link in the COM archive if the evaluation enabled value is changed.&#xA;">
              <mal:type name="Boolean" area="MAL"/>
              <mal:type list="true" name="InstanceBooleanPair" area="COM"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the requested links is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied groups is not a group of either check definition objects or check link objects.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4">
        <mal:requestIP name="listDefinition" number="5" supportInReplay="false"
                       comment="The listDefinition operation allows a consumer to request the object instance identifiers of the check definitions for the supported checks of the provider. It is expected to be used in conjunction with the COM archive which holds the actual check definition objects.&#xA;">
          <mal:messages>
            <mal:request comment="The request shall contain a list of check names to retrieve the check definition object instance identifiers for.&#xA;The request may contain the wildcard value of '*' to return all supported check definitions.&#xA;">
              <mal:type list="true" name="Identifier" area="MAL"/>
            </mal:request>
            <mal:response comment="The response shall contain a list of matching check definition object instance identifiers.&#xA;The returned list shall maintain the same order as the submitted list unless the wildcard value was included in the request.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5">
        <mal:requestIP name="addDefinition" number="6" supportInReplay="false"
                       comment="The addDefinition operation allows a consumer to define one or more checks that do not currently exist.&#xA;The new check definition is expected to be stored in the COM archive by the provider of the check service.&#xA;">
          <mal:messages>
            <mal:request comment="The supplied list shall hold the definitions to be added.&#xA;The name field of the supplied CheckDefinition structures must not be NULL, the wildcard '*', or empty (an INVALID error shall be returned in this case).&#xA;The supplied name must be unique among all CheckDefinition objects for the domain of the provider otherwise a DUPLICATE error shall be raised.&#xA;If an error is raised then no new definitions shall be added as a result of this operation call.&#xA;">
              <mal:type list="true" name="CheckDefinition" service="Check" area="MC"/>
            </mal:request>
            <mal:response comment="The response shall contain the list of object instance identifiers for the new definitions.&#xA;The returned list shall maintain the same order as the submitted definitions.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied check definitions contains an invalid name.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One or more of the check definitions being added has supplied a check name that is already in use in the domain.&#xA;">
              <mal:type name="DUPLICATE" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating request list.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="updateDefinition" number="7" supportInReplay="false"
                      comment="The updateDefinition operation allows a consumer to modify a definition for one or more checks without needing to delete the existing definition first.&#xA;This differs from deleting an existing definition and adding a new definition with the same check name in the fact that the object instance identifier is not changed between the two definitions therefore it is only expected to be used for minor modifications such as descriptions.&#xA;The operation cannot be used to change the name of an existing check definition, removal of the existing definition and adding the new definition must be used in this case.&#xA;The replacement definition should be stored in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The submitted lists shall hold the definitions to be modified.&#xA;The first list shall contain the object instance identifiers of the check definitions to be updated.&#xA;The second list shall contain the replacement check definitions.&#xA;The two lists shall be ordered the same.&#xA;The supplied object instance identifiers shall match existing definitions, an UNKNOWN error shall be raised if this is not the case.&#xA;Only the description, the maxReportingInterval, nominalCount, or violationCount fields shall be permitted to be changed. Any other modification shall cause an INVALID error to be returned.&#xA;If an error is raised then no definitions shall be updated as a result of this operation call.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
              <mal:type list="true" name="CheckDefinition" service="Check" area="MC"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied check definition object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied check definitions is trying to change its name.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="removeDefinition" number="8" supportInReplay="false"
                      comment="The removeDefinition operation allows a consumer to remove one or more definitions from the list of checks supported by the check provider.&#xA;The operation does not remove the check definition from the COM archive, merely removes it from the provider. This permits existing check link instances to continue to reference the correct check definition in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The supplied list holds the object instance identifiers of the definitions to be removed from the provider.&#xA;The list may contain the wildcard value of '0'.&#xA;If a provided definition instance identifier does not include a wildcard and does not match an existing definition then this operation shall fail with an UNKNOWN error.&#xA;Removed definitions still exist in the COM archive.&#xA;If an error is raised then no definitions shall be removed as a result of this operation call.&#xA;If the operation succeeds then the provider shall not allow check links to be created for the deleted check definitions anymore, existing check links are not affected.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied check definition object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="6">
        <mal:requestIP name="addParameterCheck" number="9" supportInReplay="false"
                       comment="The addParameterCheck operation allows a consumer to request that one or more parameters/check combinations are added to the list of checks that are being evaluated.&#xA;The new check link is expected to be stored in the COM archive by the provider of the check service.&#xA;">
          <mal:messages>
            <mal:request comment="The supplied lists shall hold the check links to be added.&#xA;The first list shall contain the CheckLink details.&#xA;The second list shall contain the ObjectDetails of the matching CheckLink.&#xA;The related field of the ObjectDetails shall reference the object instance identifier of the CheckDefinition being used by the CheckLink.&#xA;The source field of the ObjectDetails shall reference the ParameterDefinition that the check is being applied to.&#xA;The two lists must be ordered the same so that the correct ObjectDetails for a specific CheckLink can be determined.&#xA;">
              <mal:type list="true" name="CheckLink" service="Check" area="MC"/>
              <mal:type list="true" name="ObjectDetails" area="COM"/>
            </mal:request>
            <mal:response comment="The response shall contain the list of object instance identifiers for the new check links.&#xA;The returned list shall maintain the same order as the submitted links.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
        <mal:submitIP name="removeParameterCheck" number="10" supportInReplay="false"
                      comment="The removeParameterCheck operation allows a consumer to remove one or more parameters from the list of parameters being checked by the check provider.&#xA;The operation does not remove the check link from the COM archive, merely removes it from the provider. This permits existing check transition events to continue to reference the correct check link/definition in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The supplied list holds the object instance identifiers of the check links to be removed from the provider.&#xA;The list may contain the wildcard value of '0'.&#xA;If a provided check link instance identifier does not include a wildcard and does not match an existing link then this operation shall fail with an UNKNOWN error.&#xA;Removed link still exist in the COM archive.&#xA;If an error is raised then no links shall be removed as a result of this operation call.&#xA;If the operation succeeds then the provider shall not evaluate those parameter/check definition combinations for the deleted check links anymore.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied check link object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:enumeration name="CheckState" shortFormPart="8"
                         comment="The CheckState enumeration holds the possible basic states of a check. The meaning of the NOT_OK value is check specific and detailed in the relevant check type definition.&#xA;">
          <mal:item value="DISABLED" nvalue="1" comment="The check is disabled."/>
          <mal:item value="UNCHECKED" nvalue="2"
                    comment="The check is enabled but has not passed the selection condition expression."/>
          <mal:item value="INVALID" nvalue="3"
                    comment="Check is enabled, has passed the selection condition, but the entity being checked is not in a valid state and therefore has not been checked.&#xA;"/>
          <mal:item value="OK" nvalue="4" comment="All checks are OK."/>
          <mal:item value="NOT_OK" nvalue="5" comment="Not all checks are OK.&#xA;"/>
        </mal:enumeration>
        <mal:composite name="CheckDefinition"
                       comment="The CheckDefinition structure holds the definition of a check.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="name" canBeNull="false"
                     comment="The name of the check definition. Must not be empty or the wildcard value.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="description" canBeNull="false"
                     comment="The description of the check. May be empty.&#xA;">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="checkSeverity" canBeNull="false"
                     comment="Indicates the seriousness of the violation based on its possible negative consequences.">
            <mal:type name="Severity" area="MC"/>
          </mal:field>
          <mal:field name="maxReportingInterval" canBeNull="false"
                     comment="Maximum interval that can elapse between generations of CheckResult updates. If this value expires, then a CheckResult is generated with the same state for the previous and current state. If set to '0', then no maximum reporting interval shall be applied.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="nominalCount" canBeNull="false"
                     comment="Number of consecutive valid samples passing the check for the check to be OK. Must be greater than zero.&#xA;">
            <mal:type name="UInteger" area="MAL"/>
          </mal:field>
          <mal:field name="violationCount" canBeNull="false"
                     comment="Number of consecutive valid samples violating the check to be in violation. Must be greater than zero.&#xA;">
            <mal:type name="UInteger" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ConstantCheck" shortFormPart="1"
                       comment="The ConstantCheck structure holds the constant values to compare against for a consistency check. The result of the evaluation shall be held in the CheckResult value results field.&#xA;">
          <mal:extends>
            <mal:type name="CheckDefinition" service="Check" area="MC"/>
          </mal:extends>
          <mal:field name="operator" canBeNull="false"
                     comment="The operator to be used to perform the check.">
            <mal:type name="ExpressionOperator" service="Archive" area="COM"/>
          </mal:field>
          <mal:field name="values" canBeNull="false"
                     comment="The set of constant values to be checked against. An empty list means that any value change triggers the check.&#xA;">
            <mal:type list="true" name="AttributeValue" area="MC"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ReferenceCheck" shortFormPart="2"
                       comment="The ReferenceCheck structure holds the key to another entity to compare against for a consistency check. The result of the evaluation shall be held in the CheckResult value results field.&#xA;">
          <mal:extends>
            <mal:type name="CheckDefinition" service="Check" area="MC"/>
          </mal:extends>
          <mal:field name="operator" canBeNull="false"
                     comment="The operator to be used to perform the check.">
            <mal:type name="ExpressionOperator" service="Archive" area="COM"/>
          </mal:field>
          <mal:field name="checkReference" canBeNull="false" comment="The value to check against.">
            <mal:type name="ReferenceValue" service="Check" area="MC"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="DeltaCheck" shortFormPart="3"
                       comment="The DeltaCheck defines a delta transition check. It can be time-based or sample-based. Violations that fall below the lower limit shall be represented by a FALSE in the CheckResult evaluation result fields. Violations that fall above the upper limit shall be represented by a TRUE in the CheckResult evaluation result fields.&#xA;">
          <mal:extends>
            <mal:type name="CheckDefinition" service="Check" area="MC"/>
          </mal:extends>
          <mal:field name="checkReference" canBeNull="false"
                     comment="The value to compare the current value against.">
            <mal:type name="ReferenceValue" service="Check" area="MC"/>
          </mal:field>
          <mal:field name="violateInRange" canBeNull="false"
                     comment="If TRUE, then the safe (nonviolating) values lie outside the specified threshold range.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="sampleBased" canBeNull="false"
                     comment="If TRUE, then the delta values are calculated based on when the value updates; otherwise, the delta value is calculated based on an internally calculated time interval.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="valueDelta" canBeNull="false"
                     comment="If TRUE, then the thresholds contain value deltas. If FALSE, they contain percentage deltas.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="lowerThreshold"
                     comment="The lower threshold of the delta value. Must be of the correct type for the entity being checked. Must be a Float if percentage threshold.&#xA;">
            <mal:type name="Attribute" area="MAL"/>
          </mal:field>
          <mal:field name="upperThreshold"
                     comment="The upper threshold of the delta value. Must be of the correct type for the entity being checked. Must be a Float if percentage threshold.&#xA;">
            <mal:type name="Attribute" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="LimitCheck" shortFormPart="4"
                       comment="The LimitCheck defines a high and low limit check. If ranges overlap, the most severe check shall be applied. It is valid to supply only one limit; the other limit is assumed to be the relevant maximum supported by the type being checked in this case. Violations that fall below the lower limit shall be represented by a FALSE in the CheckResult evaluation result fields. Violations that fall above the upper limit shall be represented by a TRUE in the CheckResult evaluation result fields.&#xA;">
          <mal:extends>
            <mal:type name="CheckDefinition" service="Check" area="MC"/>
          </mal:extends>
          <mal:field name="violateInRange" canBeNull="false"
                     comment="If TRUE, then the safe (nonviolating) values lie outside the specified limits range.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="lowerLimit"
                     comment="The lower limit of the value. Must be of the correct type for the entity being checked.">
            <mal:type name="Attribute" area="MAL"/>
          </mal:field>
          <mal:field name="upperLimit"
                     comment="The upper limit of the value. Must be of the correct type for the entity being checked.">
            <mal:type name="Attribute" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="CheckLink" shortFormPart="5"
                       comment="The CheckLink structure represents the link from a check definition to a check result for a specific parameter.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="checkEnabled" canBeNull="false"
                     comment="TRUE if the check instance is enabled.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="checkOnChange" canBeNull="false"
                     comment="If TRUE then any change to state or value of the parameter, or the check condition will trigger a check evaluation.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="useConverted" canBeNull="false"
                     comment="If set to TRUE the converted value field of the parameter value should be used, otherwise the raw value field should be used.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="checkInterval" canBeNull="false"
                     comment="The interval that a check should be applied. Only applicable if checkOnChange is FALSE. If '0', then no periodic checking shall be performed, and a check will be triggered by another mechanism.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="condition"
                     comment="Should this check be applied, if NULL then always applied.&#xA;">
            <mal:type name="ParameterExpression" area="MC"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="CheckResult" shortFormPart="6"
                       comment="The CheckResult structure holds basic information about the check state and the value of the parameter at the time of the check. The time stamp of the event is the transition time of the check.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="previousCheckState" canBeNull="false"
                     comment="The previous evaluation state of the check. Initially UNCHECKED for the first transition of a check. For check evaluations that do not detect a check transition, this value will be the same as the currentCheckState.&#xA;">
            <mal:type name="CheckState" service="Check" area="MC"/>
          </mal:field>
          <mal:field name="currentCheckState" canBeNull="false"
                     comment="The current evaluation state of the check&#xA;">
            <mal:type name="CheckState" service="Check" area="MC"/>
          </mal:field>
          <mal:field name="checkedValue"
                     comment="This is the value of the entity at the time of a check state transition, or if it is an update due to the CheckDefinition maxReportingInterval expiring, then it is the value of the entity when the interval expired.&#xA;">
            <mal:type name="Attribute" area="MAL"/>
          </mal:field>
          <mal:field name="previousEvaluationResult"
                     comment="When the previous state of the check is NOT_OK, this shall hold the previous check evaluation result. NULL if previous state is not NOT_OK.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="currentEvaluationResult"
                     comment="When the current state of the check is NOT_OK, this shall hold the current check evaluation result. NULL if current state is not NOT_OK.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ReferenceValue" shortFormPart="7"
                       comment="The ReferenceValue structure defines a value to compare against. A validCount of '1' and deltaTime of '0' would compare against the previous sample value.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="validCount" canBeNull="false"
                     comment="Number of valid samples that should be collected to update the reference value.&#xA;">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="deltaTime" canBeNull="false"
                     comment="Delta time from now into the past from which the reference value should be sampled.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="parameterId"
                     comment="The parameter to compare against. If NULL, then it should be compared against itself.&#xA;">
            <mal:type name="ObjectKey" area="COM"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="CheckResultFilter" shortFormPart="9"
                       comment="The CheckResultFilter structure holds a filter for the current check result transition information.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="checkFilter" canBeNull="false"
                     comment="The list of check definition object instance identifiers to filter on. Empty list means match all.&#xA;">
            <mal:type list="true" name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="parameterFilter" canBeNull="false"
                     comment="List of parameter object instance identifiers to filter on. Empty list means match all.&#xA;">
            <mal:type list="true" name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="stateFilter" canBeNull="false"
                     comment="The list of required check states to filter on. Empty list means match all.&#xA;">
            <mal:type list="true" name="CheckState" service="Check" area="MC"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="CheckSummary" shortFormPart="10"
                       comment="The CheckSummary structure holds details about a specific check link and its evaluated result.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="linkId" canBeNull="false"
                     comment="The object instance identifier of the check link.&#xA;">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="parameterId" canBeNull="false"
                     comment="The object instance key of the parameter definition being checked.&#xA;">
            <mal:type name="ObjectKey" area="COM"/>
          </mal:field>
          <mal:field name="evaluationTime" canBeNull="false"
                     comment="The time stamp of the check result.&#xA;">
            <mal:type name="Time" area="MAL"/>
          </mal:field>
          <mal:field name="result" canBeNull="false" comment="The check result value.&#xA;">
            <mal:type name="CheckResult" service="Check" area="MC"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Two COM objects shall be used to hold the check definition details, the first is a CheckDefinition COM object that holds the name of the check definition and a second COM object that holds the actual definition of the check.&#xA;The actual check definition details shall be represented as one of the specific check definition COM objects (ConstantCheck, ReferenceCheck, DeltaCheck, LimitCheck).&#xA;The CheckDefinition object shall use the source link to indicate which actual COM definition object (ConstantCheck, ReferenceCheck, DeltaCheck, LimitCheck) it uses.&#xA;The link between which parameters are being evaluated for each check shall be represented as CheckLink COM objects.&#xA;The CheckLink object shall use the related link to indicate which CheckDefinition object it uses.&#xA;The CheckLink object shall use the source link to indicate which ParameterDefinition object it is checking.&#xA;Violations of a check evaluation or the maximum reporting interval expiring shall be represented as CheckTransition COM events.&#xA;The CheckTransition event objects shall use the related link to indicate which CheckLink object it uses.&#xA;The CheckTransition event objects shall use the source link to indicate what object (if any) caused it to be evaluated, most likely the relevant ParameterValue object or the COM OperationActivity object of a triggerCheck operation.&#xA;In the case of maximum reporting interval being expiring the source link of the CheckTransition event object shall be set to NULL.&#xA;">
          <com:object name="CheckDefinition" number="1">
            <com:objectType>
              <mal:type name="Identifier" area="MAL"/>
            </com:objectType>
            <com:sourceObject comment="Links to the actual check definition object such as ConstantCheck&#xA;"/>
          </com:object>
          <com:object name="CheckLink" number="2">
            <com:objectType>
              <mal:type name="CheckLink" service="Check" area="MC"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Check" area="MC"/>
            </com:relatedObject>
            <com:sourceObject>
              <com:objectType number="1" service="Parameter" area="MC"/>
            </com:sourceObject>
          </com:object>
          <com:object name="ConstantCheck" number="4">
            <com:objectType>
              <mal:type name="ConstantCheck" service="Check" area="MC"/>
            </com:objectType>
          </com:object>
          <com:object name="ReferenceCheck" number="5">
            <com:objectType>
              <mal:type name="ReferenceCheck" service="Check" area="MC"/>
            </com:objectType>
          </com:object>
          <com:object name="DeltaCheck" number="6">
            <com:objectType>
              <mal:type name="DeltaCheck" service="Check" area="MC"/>
            </com:objectType>
          </com:object>
          <com:object name="LimitCheck" number="7">
            <com:objectType>
              <mal:type name="LimitCheck" service="Check" area="MC"/>
            </com:objectType>
          </com:object>
        </com:objects>
        <com:events comment="When a check is evaluated and its state changes, the change in state shall be represented as CheckTransition COM events.&#xA;When the maximum reporting interval for a check expires a CheckTransition COM event shall be generated.&#xA;The CheckTransition event shall use the related link to indicate which CheckLink object it uses.&#xA;The CheckTransition event shall use the source link to indicate what object (if any) caused it to be evaluated.&#xA;The event shall be published using the COM event service.&#xA;&#xA;">
          <com:event name="CheckTransition" number="3">
            <com:objectType>
              <mal:type name="CheckResult" service="Check" area="MC"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="2" service="Check" area="MC"/>
            </com:relatedObject>
            <com:sourceObject comment="The object that caused the check evaluation to occur, most likely the relevant ParameterValue object.&#xA;"/>
          </com:event>
        </com:events>
        <com:archiveUsage comment="CheckDefinition objects should be stored in the COM archive.&#xA;The COM objects that hold the actual check definition details (such as ConstantCheck, ReferenceCheck, DeltaCheck, LimitCheck) should be stored in the COM archive.&#xA;CheckLink objects should be stored in the COM archive.&#xA;When a check transition event is published, the event should be stored in the COM archive.&#xA;"/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Statistic" number="5"
                 comment="The statistic service allows the consumer to monitor and control the statistical evaluation (e.g., average) of parameters.&#xA;The statistic service allows the consumer to link the statistic function to a parameter to be evaluated. Figure 3-5 shows the nominal sequence of operations for the statistic service:&#xA;---- nominal sequence diag ----&#xA;Statistic service nominal sequence&#xA;For each statistics link the service allows a consumer to specify a collection interval, a reporting interval, and a sampling interval. The collection interval defines the period of time which parameter values are collected for the statistic function before having the result reset, the update interval defines the interval between updates, and the sampling interval defines the interval between sampling the linked parameter. A consumer can create several links to the same parameter with different intervals, for example for the function 'Maximum', a consumer might define two links with different collection intervals, one for an hour (D0) and one for four hours (D1). The consumer might also specify the reporting interval of half an hour for the first collection interval and two hours for the second collection interval. This would mean that the service provider would produce reports as shown in Figure 3-6.&#xA;--- timeline chart ---&#xA;Example Statistic interval reporting&#xA;When a collection interval expires the currently calculated value for the parameter being sampled is reset, so if an hourly collection interval is defined for a maximum function then every hour the current maximum value is reset (this does not affect the value reported by the Parameter service itself or any other links for the same function and parameter) and a report is generated containing the final value of the function just before the reset.&#xA;The consumer is also able to define the sampling interval of the parameter for a link. This is independent both the collection interval and the reporting interval. It makes sense for the sampling interval to be smaller than both the collection and reporting interval however it is perfectly possible to specify other values, as this is a deployment decision.&#xA;For the statistic service, the list of possible statistics functions is deployment-dependent, as it will have to be implemented in the service provider. There are no operations for the creation, modification, or deletion of the statistic functions.&#xA;"
                 requirements="A consumer may request the current status of the statistical evaluations using the getStatistics operation.&#xA;If a statistic link is required to send periodic updates, then the time between these updates shall be controlled using the reportingInterval duration value.&#xA;A reportingInterval value of '0' shall mean no periodic updates shall be sent; updates are required to be triggered by another mechanism in this case.&#xA;The reportingInterval value can be modified by using the updateParameterEvaluation operation.&#xA;If the reporting interval and the collection intervals align, for example report every minute with a five minute collection interval the fifth minute will align, then only a single report shall be generated in this case.&#xA;For onboard parameters the link sampling interval should be a multiple of the minimum sampling interval of those parameters.&#xA;If an interval that is not supported by the provider is requested, then an INVALID error shall be returned, and the change rejected.&#xA;">
      <mal:capabilitySet number="1">
        <mal:requestIP name="getStatistics" number="1" supportInReplay="true"
                       comment="The getStatistics operation returns the current value for a requested set of statistic evaluations.&#xA;">
          <mal:messages>
            <mal:request>
              <mal:field name="funcObjInstIds"
                         comment="The funcObjInstIds field shall include a list of statistic function object instance identifiers to match.&#xA;The funcObjInstIds field shall support the wildcard value of '0' and will match all functions of the provider.&#xA;&#xA;">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="paramDefInstObjIds"
                         comment="The paramDefObjInstIds field shall include a list of parameter definition object instance keys to match.&#xA;The paramDefObjInstIds field shall support the wildcard value of '0' and matches all parameter definitions of the provider matched to the functions given in the funcObjInstIds field.&#xA;">
                <mal:type list="true" name="ObjectKey" area="COM"/>
              </mal:field>
            </mal:request>
            <mal:response comment="The response shall contain a list of matching statistics evaluation values.&#xA;The operation shall trigger an evaluation of the statistiical functions matched and returns those values.&#xA;The evaluation shall not trigger an update via the monitorStatistics operation.&#xA;">
              <mal:type list="true" name="StatisticEvaluationReport" service="Statistic" area="MC"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
        <mal:requestIP name="resetEvaluation" number="2" supportInReplay="false"
                       comment="The operation allows a consumer to reset the statistical evaluations so the evaluations restart from the current time (without changing the collection interval), optionally returning the evaluation up to that point. Resetting the evaluation will affect all consumers.&#xA;">
          <mal:messages>
            <mal:request comment="The first part of the request shall be a Boolean indicating whether the supplied object instance identifiers are group objects or statistic link objects.&#xA;If the initial Boolean is TRUE then the object instance identifiers are group identifiers, otherwise they shall be StatisticLink object instance identifiers.&#xA;The request shall include a list of StatisticLink object instance identifiers to match.&#xA;The wildcard value of '0' shall be supported and matches all links of the provider.&#xA;The request shall include a list of parameter object instance keys to match.&#xA;The wildcard value of '0' shall be supported and matches all parameters of the provider.&#xA;The request shall include a final Boolean indicating whether to return the current evaluation result for each of the matched links before resetting, if the value is TRUE then the current evaluation is returned otherwise a NULL is returned.&#xA;">
              <mal:type name="Boolean" area="MAL"/>
              <mal:type list="true" name="Long" area="MAL"/>
              <mal:type list="true" name="ObjectKey" area="COM"/>
              <mal:type name="Boolean" area="MAL"/>
            </mal:request>
            <mal:response>
              <mal:type list="true" name="StatisticEvaluationReport" service="Statistic" area="MC"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:pubsubIP name="monitorStatistics" number="3" supportInReplay="true"
                      comment="The monitorStatistics operation allows a consumer to subscribe for statistical evaluation value updates.&#xA;">
          <mal:messages>
            <mal:publishNotify comment="The MAL EntityKey.firstSubKey shall contain the statistic function name.&#xA;The MAL EntityKey.secondSubKey shall contain the statistic link object instance identifier.&#xA;The MAL EntityKey.thirdSubKey shall contain the parameter definition object instance identifier.&#xA;The MAL EntityKey.fourthSubKey shall contain the statistic value object instance identifier.&#xA;The timestamp of the value update shall be taken from the publish message.&#xA;The publish message shall include the object instance identifier of the statistic link object in the related link of the update.&#xA;The publish message shall include the ObjectId of the source link of the update.&#xA;If no source link is needed then it shall be replaced with a NULL.&#xA;The second part of the publish message shall be the statistic update value.&#xA;">
              <mal:type name="ObjectDetails" area="COM"/>
              <mal:type name="StatisticValue" service="Statistic" area="MC"/>
            </mal:publishNotify>
          </mal:messages>
        </mal:pubsubIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:submitIP name="enableGeneration" number="4" supportInReplay="false"
                      comment="The enableGeneration operation allows a consumer to control whether updates for specific statistical functions are generated or not. It allows the consumer to select the functions directly or indirectly using groups.&#xA;">
          <mal:messages>
            <mal:submit comment="The first part of the request shall be a Boolean indicating whether the supplied object instance identifiers are group objects or statistic link objects.&#xA;If the initial Boolean is TRUE then the object instance identifiers are group identifiers, otherwise they shall be StatisticLink object instance identifiers.&#xA;The request shall include a list of object instance identifiers and Boolean value pairs.&#xA;The wildcard value of '0' in the list of object instance identifiers shall be supported and matches all statistic links of the provider.&#xA;The service provide shall check for the wildcard value in the list of object instance identifiers first and if found no other checks of supplied object instance identifiers shall be made.&#xA;For the Boolean value in the InstanceBooleanPair a value of TRUE requests that updates of the link shall be generated, a value of FALSE requests that updates will not be generated.&#xA;If a requested link or group is unknown then an UNKNOWN error shall be returned.&#xA;If a requested group does not contain either statistic function or statistic link objects then an INVALID error shall be returned.&#xA;If an error is raised then no modifications shall be made as a result of this operation call.&#xA;The provider should update the statistic link in the COM archive if the generation enabled value is changed.&#xA;">
              <mal:type name="Boolean" area="MAL"/>
              <mal:type list="true" name="InstanceBooleanPair" area="COM"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the requested links is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied groups is not a group of either statistic function or StatisticLink objects.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5">
        <mal:requestIP name="addParameterEvaluation" number="5" supportInReplay="false"
                       comment="The addParameterEvaluation operation allows a consumer to request that one or more parameters/function combinations are added to the list of parameters that are being evaluated.&#xA;The new statistic parameter link is expected to be stored in the COM archive by the provider of the statistic service.&#xA;">
          <mal:messages>
            <mal:request comment="The supplied list shall hold a StatisticParameterDetails for each new parameter to be sampled.&#xA;The statFuncInstId field shall reference the object instance identifier of the Statistic function to be used.&#xA;If the statFuncInstId field does not match an existing statistic function then an UNKNOWN error shall be raised.&#xA;The parameterId shall reference the ParameterDefinition that the function is being applied to.&#xA;If the parameterId field does not match an existing parameter definition then an UNKNOWN error shall be raised.&#xA;If the supplied samplingInterval is not supported for the requested parameter then an INVALID error shall be returned.&#xA;If an error is raised then no new parameters shall be added as a result of this operation call.&#xA;The samplingInterval field shall contain the sampling duration interval for the parameter.&#xA;A StatisticLink object shall be created for each function/parameter link created.&#xA;Sampling of the referenced parameter shall begin immediately.&#xA;&#xA;">
              <mal:type list="true" name="StatisticParameterDetails" service="Statistic" area="MC"/>
            </mal:request>
            <mal:response comment="The response shall contain the list of object instance identifiers for the new StatisticLink objects.&#xA;The returned list shall maintain the same order as the submitted links.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the supplied links is requesting an invalid sampling interval for the request parameter.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the requested links references either an unknown statistic function or an unknown parameter definition.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="updateParameterEvaluation" number="6" supportInReplay="false"
                      comment="The updateParameterEvaluation operation allows a consumer to modify the intervals for one or more statistical evaluation links.&#xA;The updated links should be stored in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The submitted lists shall hold the links to be modified.&#xA;The first list shall contain the object instance identifiers of the links to be updated.&#xA;The second list shall contain the replacement intervals.&#xA;The two lists shall be ordered the same.&#xA;The supplied object instance identifiers shall match existing links, an UNKNOWN error shall be raised if this is not the case.&#xA;If the supplied samplingInterval is not supported for the requested parameter then an INVALID error shall be returned.&#xA;If an error is raised then no modifications shall be made as a result of this operation call.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
              <mal:type list="true" name="StatisticLink" service="Statistic" area="MC"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied link object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One or more of the supplied links is requesting an invalid sampling interval for the request parameter.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="removeParameterEvaluation" number="7" supportInReplay="false"
                      comment="The removeParameterEvaluation operation allows a consumer to remove one or more parameters from the list of parameters being sampled by the statistic provider.&#xA;The operation does not remove the link from the COM archive, merely removes it from the provider. This permits existing evaluation results to continue to reference the correct StatisticLink in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The supplied list holds the object instance identifiers of the StatisticLink objects to be removed from the provider.&#xA;The list may contain the wildcard value of '0'.&#xA;If a provided StatisticLink object instance identifier does not include a wildcard and does not match an existing link then this operation shall fail with an UNKNOWN error.&#xA;Removed links still exist in the COM archive.&#xA;If an error is raised then no links shall be removed as a result of this operation call.&#xA;If the operation succeeds then the provider shall not evaluate those parameter/function definition combinations for the deleted StatisticLink objects anymore.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the supplied StatisticLink object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="StatisticFunctionDetails" shortFormPart="1"
                       comment="The StatisticFunctionDetails structure holds the details of the function.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="name" canBeNull="false" comment="The name of the statistical function.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="description" canBeNull="false"
                     comment="The description of the statistical function.&#xA;">
            <mal:type name="String" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="StatisticLink" shortFormPart="2"
                       comment="The StatisticLink structure holds the sampling, reporting, and collection intervals for one parameter statistic function link.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="collectionInterval" canBeNull="false"
                     comment="The collection and reset interval of the statistical evaluation for the linked parameter. If set to '0', then no periodic reset of the evaluation shall be performed.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="reportingInterval" canBeNull="false"
                     comment="The interval for periodic updates being generated. If set to '0', then no periodic updates shall be sent.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="samplingInterval" canBeNull="false"
                     comment="The sampling interval for the parameter.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="reportingEnabled" canBeNull="false"
                     comment="TRUE if reporting of the evaluation instance is enabled.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="StatisticValue" shortFormPart="3"
                       comment="The StatisticValue structure holds the statistical result for a parameter.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="startTime"
                     comment="Time the statistic calculations started. This value can be NULL if the start time can be derived by other means, e.g., other start times in a set of StatisticValue structures.&#xA;">
            <mal:type name="Time" area="MAL"/>
          </mal:field>
          <mal:field name="endTime"
                     comment="Time the statistic calculations ended. This value can be NULL if the time can be derived by other means, e.g., other times in a set of StatisticValue structures.&#xA;">
            <mal:type name="Time" area="MAL"/>
          </mal:field>
          <mal:field name="valueTime"
                     comment="Time the statistic value was reached. The time is only applicable for particular statistic values such as min or max. Shall be NULL if not applicable for cases such as 'mean average'.&#xA;">
            <mal:type name="Time" area="MAL"/>
          </mal:field>
          <mal:field name="value" comment="Value of the statistic.">
            <mal:type name="Attribute" area="MAL"/>
          </mal:field>
          <mal:field name="sampleCount" canBeNull="false"
                     comment="Holds the number of samples that contributed to the statistic value. For calculated values such as 'mean average' this holds the number of samples that were used to calculate the value, for non-calculated values such as 'min' then it is the number of samples that were in the set evaluated.&#xA;">
            <mal:type name="UInteger" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="StatisticEvaluationReport" shortFormPart="4"
                       comment="The StatisticEvaluationReport structure holds the set of statistical results.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="linkId" canBeNull="false"
                     comment="The statistic link object instance identifier.&#xA;">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="value" canBeNull="false" comment="The statistical evaluation value.&#xA;">
            <mal:type name="StatisticValue" service="Statistic" area="MC"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="StatisticParameterDetails" shortFormPart="5"
                       comment="The StatisticParameterDetails structure holds the sampling interval details for a specific parameter and function association.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="statFuncInstId" canBeNull="false"
                     comment="The object instance identifier of the statistical function to be used.&#xA;">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="parameterId" canBeNull="false"
                     comment="The object key of the parameter definition being referenced.&#xA;">
            <mal:type name="ObjectKey" area="COM"/>
          </mal:field>
          <mal:field name="intervals" canBeNull="false"
                     comment="The collection, reporting, and sampling intervals.&#xA;">
            <mal:type name="StatisticLink" service="Statistic" area="MC"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="The statistic functions shall be represented as StatisticFunction COM objects.&#xA;For a 'Maximum' statistics function, the object instance identifier of '1' shall be used.&#xA;For a 'Minimum' statistics function, the object instance identifier of '2' shall be used.&#xA;For a 'Mean average' statistics function, the object instance identifier of '3' shall be used.&#xA;For a 'Standard deviation' statistics function, the object instance identifier of '4' shall be used.&#xA;For non-standard statistics functions, i.e. ones not listed here, the name and object instance identifier shall be communicated through an out-of-band agreement.&#xA;The link between which parameters are being evaluated for each function shall be represented as StatisticLink COM objects.&#xA;Statistic evaluations for a specific parameter and statistic function shall be represented as StatisticValue COM objects.&#xA;The StatisticLink object shall use the related link to indicate which statistic function it uses.&#xA;The StatisticLink object shall use the source link to indicate which parameter definition it uses.&#xA;The StatisticValue object shall use the related link to indicate which StatisticLink object it uses.&#xA;The StatisticValue object shall use the source link to indicate what object (if any) caused it to be evaluated.&#xA;If the StatisticValue object was a result of either a resetEvaluation or getStatistic operation call then the source link shall be the COM OperationActivity object of the operation.&#xA;">
          <com:object name="StatisticFunction" number="1">
            <com:objectType>
              <mal:type name="StatisticFunctionDetails" service="Statistic" area="MC"/>
            </com:objectType>
          </com:object>
          <com:object name="StatisticLink" number="2">
            <com:objectType>
              <mal:type name="StatisticLink" service="Statistic" area="MC"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Statistic" area="MC"/>
            </com:relatedObject>
            <com:sourceObject>
              <com:objectType number="1" service="Parameter" area="MC"/>
            </com:sourceObject>
          </com:object>
          <com:object name="StatisticValue" number="3">
            <com:objectType>
              <mal:type name="StatisticValue" service="Statistic" area="MC"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="2" service="Statistic" area="MC"/>
            </com:relatedObject>
            <com:sourceObject comment="The object that caused the statictical evaluation to occur.&#xA;"/>
          </com:object>
        </com:objects>
        <com:archiveUsage comment="StatisticFunction objects should be stored in the COM archive only if they are not one of the standard functions.&#xA;StatisticLink objects should be stored in the COM archive.&#xA;When a StatisticValue update is published, the value object should be stored in the COM archive.&#xA;"/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Aggregation" number="6"
                 comment="The aggregation service allows the user to acquire several parameters in a single request.&#xA;Aggregations are generated either periodically, on an ad-hoc basis, or after a configurable timeout when being filtered. Periodic is where they are generated at a specific generation interval; in this case the periodicity is an aspect of the aggregation rather than the contained parameters. Ad-hoc is when the aggregation generation is triggered by some other deployment-specific mechanism.&#xA;Filtering is where an aggregation is only generated when the change in the value of the filtered parameters exceeds a specified threshold or a timeout is passed. Filtering can be applied to both periodic and ad-hoc aggregations.&#xA;As there may be a large amount of time between updates of an aggregation when filtering is applied, the filtering concept also has a maximum reporting interval. If an update to the aggregation has not passed the filter in the maximum reporting interval an update is generated regardless. This allows there to be regular updates of an aggregation sent regardless of filtering.&#xA;The COM archive is used to hold the definitions of the aggregations.&#xA;"
                 requirements="Three modes of generating an aggregation value shall exist: periodic, ad-hoc, and filtered timeout.&#xA;Periodic updates for aggregations shall be generated once for each cycle of the specified interval with a generation mode of PERIODIC.&#xA;Ad-hoc updates for aggregations shall be triggered by some other deployment-specific means with a generation mode of ADHOC.&#xA;If filtering is enabled, a filtered timeout has been set for that aggregation and if no change has been detected in that time-out period, an aggregation value shall be generated with a generation mode of FILTERED_TIMEOUT. This measure ensures that extensive periods of time do not elapse without updates of an enabled aggregation.&#xA;Filtered updates for aggregations shall be generated only when the value of one or more parameters in the aggregation has changed by more than a given threshold since the previous generation or when the filtered timeout expires.&#xA;Parameters in an aggregation that do not have a filter specified in the aggregation definition shall be ignored by the filter comparison process.&#xA;The threshold for the filter shall be defined, on a per-parameter basis, either as a percentage or an (absolute) delta change in value.&#xA;The generation of updates to the aggregation shall be controlled by the generationEnabled Boolean value in the AggregationDefinition.&#xA;Setting the generationEnabled field to TRUE shall enable generation of updates for a specific aggregation.&#xA;If an aggregation is required to send periodic updates, then the time between these updates shall be controlled using the updateInterval Duration value in the AggregationDefinition.&#xA;An updateInterval value of '0' shall mean that no periodic updates shall be generated. Updates shall be triggered by another implementation-specific mechanism in this case.&#xA;The generationEnabled, filteredTimeout and updateInterval values can be set by using the updateDefinition operation.&#xA;If an interval that is not supported by the provider is requested, then an INVALID error shall be returned, and the change rejected.&#xA;The ordering of the values in the AggregationValue shall match the ordering of parameters in the AggregationDefinition.&#xA;">
      <mal:capabilitySet number="1">
        <mal:pubsubIP name="monitorValue" number="1" supportInReplay="true"
                      comment="The monitorValue operation allows a consumer to subscribe for aggregation value updates.&#xA;">
          <mal:messages>
            <mal:publishNotify comment="The MAL EntityKey.firstSubKey shall contain the aggregation name.&#xA;The MAL EntityKey.secondSubKey shall contain the aggregation definition object instance identifier.&#xA;The MAL EntityKey.thirdSubKey shall contain the aggregation value object instance identifier.&#xA;The MAL EntityKey.fourthSubKey shall be NULL.&#xA;The timestamp of the aggregation value update shall be taken from the publish message.&#xA;The publish message shall include the ObjectId of the source link of the update.&#xA;If no source link is needed then it shall be replaced with a NULL.&#xA;The second part of the publish message shall be the aggregation update value.&#xA;">
              <mal:type name="ObjectId" area="COM"/>
              <mal:type name="AggregationValue" service="Aggregation" area="MC"/>
            </mal:publishNotify>
          </mal:messages>
        </mal:pubsubIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="getValue" number="2" supportInReplay="true"
                       comment="The getValue operation returns the latest value for a requested aggregation.&#xA;">
          <mal:messages>
            <mal:request comment="The request shall include a list of aggregation definition object instance identifiers.&#xA;The wildcard value of '0' shall be supported and matches all aggregations of the provider.&#xA;If a request aggregation is unknown then an UNKNOWN error shall be returned.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:request>
            <mal:response comment="The response shall contain a list of returned aggregation definition object instance identifiers and a matching list of aggregation values.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
              <mal:type list="true" name="AggregationValue" service="Aggregation" area="MC"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the requested aggregations is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:submitIP name="enableGeneration" number="3" supportInReplay="false"
                      comment="The enableGeneration operation allows a consumer to control whether updates for specific aggregations are generated or not. It allows the consumer to select the aggregations directly or indirectly using groups. This affects all types of aggregations, periodic, filtered and ad-hoc.&#xA;">
          <mal:messages>
            <mal:submit comment="The first part of the request shall be a Boolean indicating whether the supplied object instance identifiers are group objects or aggregation objects.&#xA;If the initial Boolean is TRUE then the object instance identifiers are group identifiers, otherwise they shall be Aggregation Definition identifiers.&#xA;The request shall include a list of object instance identifiers and Boolean value pairs.&#xA;The wildcard value of '0' in the list of object instance identifiers shall be supported and matches all aggregations of the provider.&#xA;The service provide shall check for the wildcard value in the list of object instance identifiers first and if found no other checks of supplied object instance identifiers shall be made.&#xA;For the Boolean value in the InstanceBooleanPair a value of TRUE requests that updates of the aggregation shall be generated, a value of FALSE requests that updates will not be generated.&#xA;If a requested aggregation or group is unknown then an UNKNOWN error shall be returned.&#xA;If a requested group does not contain aggregation definition objects then an INVALID error shall be returned.&#xA;If the current generation enabled value of a matched aggregation definition is the same as the supplied value no error shall be generated. I.e. enabling an already enabled aggregation will not raise an error.&#xA;If an error is raised then no modifications shall be made as a result of this operation call.&#xA;The provider should update the aggregation definition in the COM archive if the generation enabled value is changed.&#xA;">
              <mal:type name="Boolean" area="MAL"/>
              <mal:type list="true" name="InstanceBooleanPair" area="COM"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the requested aggregations is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied groups is not a group of aggregation definitions.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="enableFilter" number="4" supportInReplay="false"
                      comment="The enableFilter operation allows a consumer to control whether updates for specific aggregations are filtered or not. It allows the consumer to select the aggregations directly or indirectly using groups. This affects both periodic and ad-hoc aggregations.&#xA;">
          <mal:messages>
            <mal:submit comment="The first part of the request shall be a Boolean indicating whether the supplied object instance identifiers are group objects or aggregation objects.&#xA;If the initial Boolean is TRUE then the object instance identifiers are group identifiers, otherwise they shall be Aggregation Definition identifiers.&#xA;The request shall include a list of object instance identifiers and Boolean value pairs.&#xA;The wildcard value of '0' in the list of object instance identifiers shall be supported and matches all aggregations of the provider.&#xA;For the Boolean value in the InstanceBooleanPair a value of TRUE requests that updates of the aggregation shall be filtered, a value of FALSE requests that updates will not be filtered.&#xA;If a requested aggregation or group is unknown then an UNKNOWN error shall be returned.&#xA;If a requested group does not contain aggregation definition objects then an INVALID error shall be returned.&#xA;If the current filter enabled value of a matched aggregation definition is the same as the supplied value no error shall be generated. I.e. filtering an already filtered aggregation will not raise an error.&#xA;If an error is raised then no modifications shall be made as a result of this operation call.&#xA;The provider should update the aggregation definition in the COM archive if the filterEnabled value is changed.&#xA;">
              <mal:type name="Boolean" area="MAL"/>
              <mal:type list="true" name="InstanceBooleanPair" area="COM"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied groups is not a group of aggregation definitions.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One or more of the requested aggregations is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4">
        <mal:requestIP name="listDefinition" number="5" supportInReplay="true"
                       comment="The listDefinition operation allows a consumer to request the object instance identifiers of the aggregation definitions for the supported aggregations of the provider. It is expected to be used in conjunction with the COM archive which holds the actual aggregation definition objects.&#xA;">
          <mal:messages>
            <mal:request comment="The request shall contain a list of aggregation names to retrieve the aggregation definition object instance identifiers for.&#xA;The request may contain the wildcard value of '*' to return all supported aggregation definitions.&#xA;">
              <mal:type list="true" name="Identifier" area="MAL"/>
            </mal:request>
            <mal:response comment="The response shall contain a list of matching aggregation definition object instance identifiers.&#xA;The returned list shall maintain the same order as the submitted list unless the wildcard value was included in the request.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5">
        <mal:requestIP name="addDefinition" number="6" supportInReplay="false"
                       comment="The addDefinition operation allows a consumer to define one or more aggregations that do not currently exist.&#xA;The new aggregation definition is expected to be stored in the COM archive by the provider of the aggregation service.&#xA;">
          <mal:messages>
            <mal:request comment="The supplied list shall hold the definitions to be added.&#xA;The name field of the supplied AggregationDefinition structures must not be NULL, the wildcard '*', or empty (an INVALID error shall be returned in this case).&#xA;The supplied name must be unique among all AggregationDefinition objects for the domain of the provider otherwise a DUPLICATE error shall be raised.&#xA;If an error is raised then no new definitions shall be added as a result of this operation call.&#xA;">
              <mal:type list="true" name="AggregationDefinition" service="Aggregation" area="MC"/>
            </mal:request>
            <mal:response comment="The response shall contain the list of object instance identifiers for the new definitions.&#xA;The returned list shall maintain the same order as the submitted definitions.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more of the aggregation definitions being added has supplied an aggregation name that is already in use in the domain.&#xA;">
              <mal:type name="DUPLICATE" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating request list.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied aggregation definitions contains an invalid name.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="updateDefinition" number="7" supportInReplay="false"
                      comment="The updateDefinition operation allows a consumer to modify a definition for one or more aggregations without needing to delete the existing definition first.&#xA;This differs from deleting an existing definition and adding a new definition with the same aggregation name in the fact that the object instance identifier is not changed between the two definitions therefore it is only expected to be used for minor modifications such as descriptions.&#xA;The operation cannot be used to change the name of an existing aggregation definition, removal of the existing definition and adding the new definition must be used in this case.&#xA;The replacement definition should be stored in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The submitted lists shall hold the definitions to be modified.&#xA;The first list shall contain the object instance identifiers of the aggregation definitions to be updated.&#xA;The second list shall contain the replacement aggregation definitions.&#xA;The two lists shall be ordered the same.&#xA;The supplied object instance identifiers shall match existing definitions, an UNKNOWN error shall be raised if this is not the case.&#xA;Only the description, generationEnabled, updateInterval, filterEnabled, or filterTimeout fields shall be permitted to be changed. Any other modification shall cause an INVALID error to be returned.&#xA;If an error is raised then no definitions shall be updated as a result of this operation call.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
              <mal:type list="true" name="AggregationDefinition" service="Aggregation" area="MC"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied aggregation definition object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied aggregation definitions is trying to change its name.&#xA;">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="removeDefinition" number="8" supportInReplay="false"
                      comment="The removeDefinition operation allows a consumer to remove one or more definitions from the list of aggregations supported by the aggregation provider.&#xA;The operation does not remove the aggregation definition from the COM archive, merely removes it from the provider. This permits existing aggregation value instances to continue to reference the correct aggregation definition in the COM archive.&#xA;">
          <mal:messages>
            <mal:submit comment="The supplied list holds the object instance identifiers of the definitions to be removed from the provider.&#xA;The list may contain the wildcard value of '0'.&#xA;If a provided definition instance identifier does not include a wildcard and does not match an existing definition then this operation shall fail with an UNKNOWN error.&#xA;Removed definitions shall still exist in the COM archive.&#xA;If an error is raised then no definitions shall be removed as a result of this operation call.&#xA;If the operation succeeds then the provider shall not publish aggregation value instances for the deleted aggregation definitions anymore.&#xA;">
              <mal:type list="true" name="Long" area="MAL"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied aggregation definition object instance identifiers is unknown.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.&#xA;">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:enumeration name="AggregationCategory" shortFormPart="5"
                         comment="AggregationCategory is an enumeration definition holding the categories of aggregations.">
          <mal:item value="GENERAL" nvalue="1" comment="General aggregation."/>
          <mal:item value="DIAGNOSTIC" nvalue="2" comment="Diagnostic aggregation."/>
        </mal:enumeration>
        <mal:enumeration name="ThresholdType" shortFormPart="6"
                         comment="ThresholdType is an enumeration definition holding the types of filtering thresholds.">
          <mal:item value="PERCENTAGE" nvalue="1" comment="Threshold value is a percentage.&#xA;"/>
          <mal:item value="DELTA" nvalue="2" comment="Threshold value is a delta.&#xA;"/>
        </mal:enumeration>
        <mal:enumeration name="GenerationMode" shortFormPart="7"
                         comment="GenerationMode is an enumeration definition holding the reasons for the aggregation to be generated.&#xA;">
          <mal:item value="ADHOC" nvalue="1"
                    comment="The aggregation value was generated because of an ad-hoc implementation dependent reason.&#xA;"/>
          <mal:item value="PERIODIC" nvalue="2"
                    comment="The aggregation value was generated because of a periodic update.&#xA;"/>
          <mal:item value="FILTERED_TIMEOUT" nvalue="3"
                    comment="The item is filtered but it exceeded its timeout value.&#xA;"/>
        </mal:enumeration>
        <mal:composite name="AggregationDefinition" shortFormPart="1"
                       comment="The AggregationDefinition defines the structure of an aggregation.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="name" canBeNull="false"
                     comment="The name of the aggregation. Must not be empty or the wildcard value.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="description" canBeNull="false"
                     comment="The description of the parameter. May be empty.&#xA;">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="category" canBeNull="false" comment="Category of the aggregation.">
            <mal:type name="AggregationCategory" service="Aggregation" area="MC"/>
          </mal:field>
          <mal:field name="generationEnabled" canBeNull="false"
                     comment="Controls whether updates for this aggregation are to be generated.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="updateInterval" canBeNull="false"
                     comment="The interval between periodic updates on this aggregation. If this aggregation is not periodic, this field must be '0'.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="filterEnabled" canBeNull="false"
                     comment="Controls whether updates for this aggregation are to be filtered.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="filteredTimeout" canBeNull="false"
                     comment="The maximum duration between filtered updates. If this value is exceeded, then an update is sent regardless of filtered thresholds. Ignored if not filtered.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="parameterSets" canBeNull="false"
                     comment="List containing the parameter sets which define the aggregation.&#xA;">
            <mal:type list="true" name="AggregationReference" service="Aggregation" area="MC"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="AggregationValue" shortFormPart="2"
                       comment="The AggregationValue structure holds the values for one or more sets of parameter values. The values must be held in the same order as that defined in the aggregation definition.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="generationMode" canBeNull="false"
                     comment="Reason for the aggregation being generated.&#xA;">
            <mal:type name="GenerationMode" service="Aggregation" area="MC"/>
          </mal:field>
          <mal:field name="filtered" canBeNull="false"
                     comment="If a filter is enabled when the aggregation value is generated then this value shall be set to TRUE, else FALSE.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="deltaTime"
                     comment="Optional delta time, from the time stamp of the aggregation, for the first parameter sample. If NULL, then the first sample time is the same as the aggregation time stamp.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="intervalTime"
                     comment="Optional delta time between samples in a single set. If NULL, then all samples in that set are given the same time.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="setIntervalTime"
                     comment="Optional delta time between the last sample of a set and the first sample of the next set. If NULL, then the first sample of a set is given the same time as the last sample of the previous set.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="values" canBeNull="false"
                     comment="List containing values of the parameters which are part of the aggregation. The ordering of the list entries shall match that of the definition of the aggregation. If a value for a particular entity is not being supplied, then its position shall be filled with a NULL value. If there are more values than contained in the definition then it is assumed that the parameters cycle as parameter sets.&#xA;">
            <mal:type list="true" name="ParameterValue" service="Parameter" area="MC"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="AggregationReference" shortFormPart="3"
                       comment="The AggregationReference structure holds the identifier and optional filter for a parameter in an aggregation.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="domain"
                     comment="The domain of the parameters being referenced in this set of parameters, NULL if the same domain as the aggregation.&#xA;">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="parameters" canBeNull="false"
                     comment="The list of object instance identifiers of the parameter definitions being included in the aggregation.&#xA;">
            <mal:type list="true" name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="sampleInterval" canBeNull="false"
                     comment="The interval between samples of the parameters in the set. If '0' then just a single sample of the parameters is required per aggregation update.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="periodicFilter"
                     comment="If the AggregationReference contains a single parameter then this field contains the filter to apply for filtered periodic updates when filters are applied. NULL if no filter required or this aggregation reference contains more than one parameter.&#xA;">
            <mal:type name="ThresholdFilter" service="Aggregation" area="MC"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ThresholdFilter" shortFormPart="4"
                       comment="The ThresholdFilter structure holds the filter for a parameter.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="thresholdType" canBeNull="false"
                     comment="The type of filter to apply for filtered periodic updates when filters are applied.">
            <mal:type name="ThresholdType" service="Aggregation" area="MC"/>
          </mal:field>
          <mal:field name="thresholdValue" canBeNull="false" comment="Threshold value to apply.">
            <mal:type name="Attribute" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="The definitions of the aggregations shall be represented as AggregationDefinition COM objects.&#xA;Aggregation value updates shall be represented as AggregationValue COM objects.&#xA;The AggregationValue object shall use the related link to indicate which AggregationDefinition object it uses.&#xA;The source link of the AggregationDefinition object should be the object that caused it to be created, most likely a COM OperationActivity object or an operator login in the case of off-line editors being used.&#xA;The source link of the AggregationValue object should be the object that caused the update to be generated.&#xA;The source link of the AggregationValue object shall be NULL for periodic updates.&#xA;">
          <com:object name="AggregationDefinition" number="1">
            <com:objectType>
              <mal:type name="AggregationDefinition" service="Aggregation" area="MC"/>
            </com:objectType>
          </com:object>
          <com:object name="AggregationValue" number="2">
            <com:objectType>
              <mal:type name="AggregationValue" service="Aggregation" area="MC"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Aggregation" area="MC"/>
            </com:relatedObject>
          </com:object>
        </com:objects>
        <com:archiveUsage comment="AggregationDefinition objects should be stored in the COM archive.&#xA;When an aggregation value update is published, the AggregationValue object should be stored in the COM archive.&#xA;"/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Conversion" number="7"
                 comment="The conversion service provides a set of basic conversion definition types that allows the specification of a conversion between two representations. These conversions are used by the other M&amp;C services (such as Action, Alert, and Parameter) to define conversions from raw field representations to some engineering representation.&#xA;Conversions are associated with other entities such as parameters or action/alert arguments through the configuration of the relevant service (action/alert/parameter).&#xA;The conversion service does not provide any operations directly, but allows consumers to add, remove, and modify conversion definitions via the COM archive.&#xA;">
      <mal:dataTypes>
        <mal:composite name="DiscreteConversion" shortFormPart="1"
                       comment="The DiscreteConversion structure holds a bidirectional conversion between raw and converted values. The first element of the pair is the raw value and the second is the converted value. Both sets of values must be unique.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="mapping" canBeNull="false"
                     comment="Defines a mapping between raw and converted values as a discrete set of points. The first entry in the pair is the raw value, and the second entry is the converted value.&#xA;">
            <mal:type list="true" name="Pair" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="LineConversion" shortFormPart="2"
                       comment="The LineConversion structure is a bi-directional conversion between raw and converted values. It is defined by a series of points between which values are to be interpolated. The extrapolate attribute indicates if values can also be linearly extrapolated beyond the initial and final points.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="extrapolate" canBeNull="false"
                     comment="Indicates whether or not values can be extrapolated beyond the start and the end of the points.">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="points" canBeNull="false"
                     comment="Defines the bi-directional conversion. The first attribute of the point is a raw value, and the second attribute is the converted value.&#xA;">
            <mal:type list="true" name="Pair" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="PolyConversion" shortFormPart="3"
                       comment="The PolyConversion structure holds only forward (raw to converted) polynomial conversions. They are defined by a series of points for the polynomial coefficients.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="points" canBeNull="false"
                     comment="The first attribute of a point is a MAL::Integer, being the degree of the polynomial; the second attribute is either a MAL::Float or a MAL::Double, being the coefficient of the term.&#xA;">
            <mal:type list="true" name="Pair" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="RangeConversion" shortFormPart="4"
                       comment="The RangeConversion structure holds a range for a one-way conversion to convert between a continuous range to a discrete value. A range is defined as from this point up to, but not including, the next point.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="points" canBeNull="false"
                     comment="The first attribute in each pair is the raw range, and the second attribute is the converted value.&#xA;">
            <mal:type list="true" name="Pair" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Each type of conversion shall be represented by a COM object type.&#xA;Other service objects shall reference instances of a conversion using its object instance identifier.&#xA;The source link of the conversion objects should be the object that caused them to be created, most likely a COM OperationActivity object.&#xA;&#xA;">
          <com:object name="DiscreteConversion" number="1">
            <com:objectType>
              <mal:type name="DiscreteConversion" service="Conversion" area="MC"/>
            </com:objectType>
          </com:object>
          <com:object name="LineConversion" number="2">
            <com:objectType>
              <mal:type name="LineConversion" service="Conversion" area="MC"/>
            </com:objectType>
          </com:object>
          <com:object name="PolyConversion" number="3">
            <com:objectType>
              <mal:type name="PolyConversion" service="Conversion" area="MC"/>
            </com:objectType>
          </com:object>
          <com:object name="RangeConversion" number="4">
            <com:objectType>
              <mal:type name="RangeConversion" service="Conversion" area="MC"/>
            </com:objectType>
          </com:object>
        </com:objects>
        <com:archiveUsage comment="The COM archive shall be used to store conversion definitions.&#xA;Each instance of a conversion definition shall be represented by an object instance held in the COM archive.&#xA;The COM archive service operations shall be used to add, update and remove conversions.&#xA;Other services should monitor the archive service for changes to conversions they reference.&#xA;"/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Group" number="8"
                 comment="The group service provides a mechanism for other services to reference sets of their own objects using a single group reference. These groups are used by the other M&amp;C services (such as Action, Alert, Check, Aggregation and Parameter) to reduce the complexity of operations by allowing consumers to reference groups of objects (such as parameters) in operations rather than having to supply large lists of object references.&#xA;The group service does not provide any operations directly, but allows consumers to add, remove, and modify group definitions via the COM archive.&#xA;">
      <mal:dataTypes>
        <mal:composite name="GroupDefinition" shortFormPart="1"
                       comment="The GroupDefinition structure holds the object type, domain, and set of object instance identifiers for a set of objects from another service.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="name" canBeNull="false" comment="Name of the group.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="description" canBeNull="false" comment="Description of the group.&#xA;">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="objectType" canBeNull="false"
                     comment="The object type of the objects referenced by this group.&#xA;">
            <mal:type name="ObjectType" area="COM"/>
          </mal:field>
          <mal:field name="domain" canBeNull="false"
                     comment="The domain of the objects being referenced by this group.&#xA;">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="instanceIds" canBeNull="false"
                     comment="The list of object instance identifiers of the objects being referenced by this group.&#xA;">
            <mal:type list="true" name="Long" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="The definitions of the groups shall be represented as Group COM objects.&#xA;Other service objects shall reference instances of a group using its object instance identifier.&#xA;The Group object shall not use the related link.&#xA;The source link of the Group object should be the object that caused it to be created, most likely a COM OperationActivity object or an operator login in the case of off-line editors being used.&#xA;">
          <com:object name="Group" number="1">
            <com:objectType>
              <mal:type name="GroupDefinition" service="Group" area="MC"/>
            </com:objectType>
          </com:object>
        </com:objects>
        <com:archiveUsage comment="The COM archive shall be used to store Group objects.&#xA;Each instance of a Group object shall be represented by an object instance held in the COM archive.&#xA;The COM archive service operations shall be used to add, update and remove groups.&#xA;Other services should monitor the archive service for changes to groups they reference.&#xA;"/>
      </com:features>
    </mal:service>
    <mal:dataTypes>
      <mal:enumeration name="Severity" shortFormPart="6"
                       comment="The severity enumeration holds the possible values for a severity. Normally, for checks, only the Warning and Critical ranges are used: the colour yellow is associated with Warning, and the colour red is associated with Critical.&#xA;">
        <mal:item value="INFORMATIONAL" nvalue="1"
                  comment="Indicates a nominal situation with no consequences.&#xA;"/>
        <mal:item value="WARNING" nvalue="2"
                  comment="Indicates unexpected behaviour without directly threatening consequences.&#xA;"/>
        <mal:item value="ALARM" nvalue="3"
                  comment="Indicates behaviour of serious concern requiring the attention of an operator, but not necessarily a malfunction.&#xA;"/>
        <mal:item value="SEVERE" nvalue="4"
                  comment="Indicates that the monitored item has malfunctioned. Requires operator attention.&#xA;"/>
        <mal:item value="CRITICAL" nvalue="5"
                  comment="Indicates behaviour with mission threatening consequences. Requires operator attention.&#xA;"/>
      </mal:enumeration>
      <mal:composite name="ArgumentDefinition" shortFormPart="1"
                     comment="The ArgumentDefinition structure holds a specific instance of an argument definition with a set of associated attributes, such as conversion used. The conversionCondition defines the conditions where the referenced conversion is applied.&#xA;">
        <mal:extends>
          <mal:type name="Composite" area="MAL"/>
        </mal:extends>
        <mal:field name="rawType" canBeNull="false"
                   comment="Holds the attribute short form part of the raw type of the argument, e.g., for a MAL::String argument it shall hold 15.&#xA;">
          <mal:type name="Octet" area="MAL"/>
        </mal:field>
        <mal:field name="rawUnit" comment="The unit for the raw value.">
          <mal:type name="String" area="MAL"/>
        </mal:field>
        <mal:field name="conversionCondition" comment="The conversion applied to the argument.">
          <mal:type list="true" name="ConditionalReference" area="MC"/>
        </mal:field>
        <mal:field name="convertedType"
                   comment="Holds the attribute short form part of the converted type of the argument, e.g., for a MAL::String argument it shall hold 15. Must not be NULL if a conversion condition is supplied.&#xA;">
          <mal:type name="Octet" area="MAL"/>
        </mal:field>
        <mal:field name="convertedUnit" comment="The converted argument units.">
          <mal:type name="String" area="MAL"/>
        </mal:field>
      </mal:composite>
      <mal:composite name="ArgumentValue" shortFormPart="2"
                     comment="The ArgumentValue structure holds a specific value of an argument. It holds either the converted or the raw value.">
        <mal:extends>
          <mal:type name="Composite" area="MAL"/>
        </mal:extends>
        <mal:field name="isConvertedValue" canBeNull="false"
                   comment="If TRUE, the supplied argument value is the converted value, otherwise it is the raw value.&#xA;">
          <mal:type name="Boolean" area="MAL"/>
        </mal:field>
        <mal:field name="value" comment="The argument value.">
          <mal:type name="Attribute" area="MAL"/>
        </mal:field>
      </mal:composite>
      <mal:composite name="ConditionalReference" shortFormPart="3"
                     comment="The ConditionalReference structure holds a condition expression to be evaluated to determine if another item should be referenced. In the case that no test is required, i.e., the item should always be referenced, then the condition field should be set to NULL.&#xA;">
        <mal:extends>
          <mal:type name="Composite" area="MAL"/>
        </mal:extends>
        <mal:field name="condition"
                   comment="The expression indicates which entities are applicable for this check. If NULL, then the condition shall evaluate to TRUE.&#xA;">
          <mal:type name="ParameterExpression" area="MC"/>
        </mal:field>
        <mal:field name="referenceId" canBeNull="false"
                   comment="Entity that should be referenced if the condition evaluates to TRUE or is NULL.&#xA;">
          <mal:type name="ObjectId" area="COM"/>
        </mal:field>
      </mal:composite>
      <mal:composite name="ParameterExpression" shortFormPart="4"
                     comment="The ParameterExpression structure represents a simple expression between a parameter and a value for that parameter.&#xA;">
        <mal:extends>
          <mal:type name="Composite" area="MAL"/>
        </mal:extends>
        <mal:field name="parameterId" canBeNull="false"
                   comment="Identifies the parameter definition to be used in the expression.&#xA;">
          <mal:type name="ObjectKey" area="COM"/>
        </mal:field>
        <mal:field name="operator" canBeNull="false" comment="The expression operator.">
          <mal:type name="ExpressionOperator" service="Archive" area="COM"/>
        </mal:field>
        <mal:field name="useConverted" canBeNull="false"
                   comment="If set to TRUE the converted value field of the parameter value should be used, otherwise the raw value field should be used.&#xA;">
          <mal:type name="Boolean" area="MAL"/>
        </mal:field>
        <mal:field name="value" comment="The value to be used in the expression.">
          <mal:type name="Attribute" area="MAL"/>
        </mal:field>
      </mal:composite>
      <mal:composite name="AttributeValue" shortFormPart="7"
                     comment="The AttributeValue structure holds an Attribute value. It allows a list of different Attribute types to be created whereas List&lt;Attribute&gt; would require the values to be all of the same type.&#xA;">
        <mal:extends>
          <mal:type name="Composite" area="MAL"/>
        </mal:extends>
        <mal:field name="value" canBeNull="false"
                   comment="The argument value. Must not be NULL. NULL may be represented by having a NULL in place of the complete AttributeValue composite.&#xA;">
          <mal:type name="Attribute" area="MAL"/>
        </mal:field>
      </mal:composite>
    </mal:dataTypes>
  </mal:area>
</mal:specification>