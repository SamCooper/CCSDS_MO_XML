<?xml version="1.0" encoding="UTF-8"?>
<mal:specification xmlns:com="http://www.ccsds.org/schema/COMSchema"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:mal="http://www.ccsds.org/schema/ServiceSchema">
  <mal:area name="Common" number="3" version="1"
            comment="This section details the Common Services; the structures used by the services are detailed in section 4. The services and structures are defined in terms of the MO Message Abstraction Layer (MAL) which is defined in reference [2], so it is possible to deploy them over any supported protocol and message transport.&#xA;The services defined here are also specified in terms of the COM which is defined in reference [3]. &#xA;To aid comprehension several tables are included for each service and operation definition. The table formats are the same as those used for the specification of the MO COM Services in reference [3]. The formats are fully described in reference [2] in section 2 and in reference [3] section 2, for COM usage.&#xA;All service specifications in this document are part of the Common Area. This has a short form number of '3'.">
    <mal:service xsi:type="com:ExtendedServiceType" name="Directory" number="1"
                 comment="The Directory service allows service providers to publish information about their services and consumers to discover services to connect to.&#xA;The service directory is represented as a set of Nodes. Each Node is identified by a Domain, Network and Session identifier.&#xA;Each Node is either a local Node or an external Node, external Nodes reside in another Directory Service and contain only the address information of that external Directory Service.&#xA;Local Nodes contain information about actual services. As each service is associated to a specific Domain/Network/Session it is therefore located at a specific Node in the Directory Service.&#xA;The local Node occurrence structure contains a list of ServiceDetails structures, each one detailing a particular service and the providers of that service. Each ProviderInformation structure then contains one or more ServiceAddress structures, each of these defines one way to contact that service provider. It is possible for a provider to offer more than one ServiceAddress as it allows the provider to support multiple message transports and encodings. Each service address lists the supported QoS levels and associated QoS properties available for that connection, a service consumer indicates the required QoS level and priority to a service provider by using these values in the initial message.&#xA;For services that have operations based on the publish and subscribe interaction pattern there may be required a separate URI for the broker component. To support this the directory service holds two URIs for each service, the URI of the primary interface and also a secondary one which, if present, is used for publish and subscribe-based operations. It is also possible that a publish and subscribe broker component is shared between more than one provider, known as a shared data source, and in this case the broker should be published as a directory service entry without a primary interface URI. The sharing providers should reference it by naming it in the 'dataName' field in their directory service entry.&#xA;Service provider information is added/removed from the Node using the Directory service publishService/withdrawService operations.&#xA;The lookupService operation provides more flexible searching abilities for Directory service consumers.">
      <mal:capabilitySet number="1">
        <mal:requestIP name="lookupService" number="1" supportInReplay="true"
                       comment="The lookup operation allows a service consumer to query the directory service to determine if a specific service is available. If no match is found, then an empty list is returned.">
          <mal:messages>
            <mal:request comment="The lookup operation shall take a single ServiceFilter structure.&#xA;If the final identifier of the domain is the wildcard '*', then all sub-domains shall be searched for matches.&#xA;The wildcard shall only be used for the final component of the domain.&#xA;If the domain field is either NULL or the wildcard '*' then all domains shall be matched.&#xA;If the network field is either NULL or the wildcard '*' then all Networks shall be matched.&#xA;If the session field is either NULL or the wildcard '*' then all Sessions shall be matched.&#xA;For all other fields in the ServiceFilter the wildcard '*' or NULL may be used to match all possible services/providers.">
              <mal:type name="ServiceFilter" service="Directory" area="Common"/>
            </mal:request>
            <mal:response comment="The operation shall return a list of matches to the query.">
              <mal:type list="true" name="ServiceDetails" service="Directory" area="Common"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:submitIP name="publishService" number="2" supportInReplay="false"
                      comment="The publishService operation adds new, or updates existing, entries in the list of services held in the directory service.">
          <mal:messages>
            <mal:submit comment="The operation shall take a list of NodeDetails structures.&#xA;For each NodeDetails structure if any of the fields of the domain/session/network fields are either NULL, empty, or contain the wildcard '*' an INVALID error shall be returned.&#xA;If an error is being returned then all updates shall be ignored.">
              <mal:type list="true" name="NodeDetails" service="Directory" area="Common"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Submitted values are invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="withdrawService" number="3" supportInReplay="false"
                      comment="The withdrawService operation removes existing entries from the list of services held in the directory service. If no match is found for the withdraw request, then nothing is changed.">
          <mal:messages>
            <mal:submit comment="The operation shall take a list of NodeDetails structures.&#xA;For each NodeDetails structure if any of the fields of the domain/session/network fields are either NULL, empty, or contain the wildcard '*' an INVALID error shall be returned.&#xA;If the fields do not match an existing local Node then an UNKNOWN error shall be returned.&#xA;Each matched provider shall have its details updated with the supplied details.&#xA;If an error is being returned then all updates shall be ignored.">
              <mal:type list="true" name="NodeDetails" service="Directory" area="Common"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Service to withdraw was not found.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted values are invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="Node"
                       comment="The Node structure holds all information for the Directory service of a specific Domain/Network/Session.">
          <mal:field name="sessionType" canBeNull="false"
                     comment="The session type of this service.">
            <mal:type name="SessionType" area="MAL"/>
          </mal:field>
          <mal:field name="sourceSessionName"
                     comment="If this is part of a replay session, this field holds the session name of the source session. NULL otherwise">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="LocalNode" shortFormPart="1"
                       comment="Represents a Node in the local Directory service.">
          <mal:extends>
            <mal:type name="Node" service="Directory" area="Common"/>
          </mal:extends>
          <mal:field name="services" canBeNull="false"
                     comment="The list of services at this Node in the directory tree.">
            <mal:type list="true" name="ServiceDetails" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ExternalNode" shortFormPart="2"
                       comment="Indicates that a Node is contained in an external Directory service.">
          <mal:extends>
            <mal:type name="Node" service="Directory" area="Common"/>
          </mal:extends>
          <mal:field name="directoryProviders" canBeNull="false"
                     comment="The information about the providers of the external Directory service that hold the information for this Node.">
            <mal:type list="true" name="ProviderInformation" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="NodeDetails" shortFormPart="4"
                       comment="Represents the combination of the Domain/Network/Session information and the service details held at that Node.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="domain" canBeNull="false" comment="The service provider domain.">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="network" canBeNull="false" comment="The service provider network.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="node" canBeNull="false" comment="The service provider details.">
            <mal:type name="LocalNode" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceFilter" shortFormPart="5"
                       comment="The ServiceFilter structure holds all information required by the Directory service for service lookup operation. The field filters are AND'd together.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="domain"
                     comment="The domain to query. Can be NULL in which case matches all values.">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="network"
                     comment="The network to match. Can be NULL or '*' which matches all values.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="sessionType"
                     comment="The session type to match. Can be NULL in which case matches all values.">
            <mal:type name="SessionType" area="MAL"/>
          </mal:field>
          <mal:field name="sessionName"
                     comment="The session name to match. Can be NULL or '*' which matches all values.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="area" canBeNull="false"
                     comment="The area of this service taken from the Area Identifier of the service specification. Can be '0' which matches all values.">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="service" canBeNull="false"
                     comment="The service taken from the Service Identifier of the service specification. Can be '0' which matches all values.">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="version" canBeNull="false"
                     comment="The version of this service taken from the Area Version of the service specification. Can be '0' which matches all values.">
            <mal:type name="UOctet" area="MAL"/>
          </mal:field>
          <mal:field name="requiredCapabilities"
                     comment="List of required capabilities. If NULL then matches any.">
            <mal:type list="true" name="Integer" area="MAL"/>
          </mal:field>
          <mal:field name="serviceProviderName"
                     comment="The required service provider. Can be NULL or '*' which matches all values.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceDetails" shortFormPart="6"
                       comment="The ServiceDetails structure holds all information required by the Directory service for a single service.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="area" canBeNull="false"
                     comment="The area of this service taken from the numeric Area identifierof the service specification.">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="service" canBeNull="false"
                     comment="The service taken from the numeric Service identifier of the service specification.">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="version" canBeNull="false"
                     comment="The version of this service taken from the Service Version of the service specification.">
            <mal:type name="UOctet" area="MAL"/>
          </mal:field>
          <mal:field name="providers" canBeNull="false"
                     comment="The list of providers of this service.">
            <mal:type list="true" name="ProviderInformation" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ProviderInformation" shortFormPart="7"
                       comment="The ProviderInformation structure holds all information required by the Directory service about a provider of a service and its capabilities. The structure contains a list of ServiceAddress structures; a service may support more than one transport technology and therefore can be reached using more than one address.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="serviceProviderName" canBeNull="false"
                     comment="The provider-defined name of the service; allows multiple service providers of the same service type to coexist in the directory service. This value is the unique service provider name.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="supportedCapabilities" canBeNull="false"
                     comment="The set of capabilities set numbers that this service occurrence supports.">
            <mal:type list="true" name="Integer" area="MAL"/>
          </mal:field>
          <mal:field name="serviceProperties" canBeNull="false"
                     comment="Allows the passing of deployment specific service properties.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
          <mal:field name="serviceAddresses" canBeNull="false"
                     comment="List of service address for this service provider.">
            <mal:type list="true" name="ServiceAddress" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceAddress" shortFormPart="8"
                       comment="The ServiceAddress structure holds all information required by the Directory service about a service URI and attributes relating to QoS.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="supportedLevels" canBeNull="false"
                     comment="The set of possible QoS levels this service can provide.">
            <mal:type list="true" name="QoSLevel" area="MAL"/>
          </mal:field>
          <mal:field name="QoSproperties" canBeNull="false"
                     comment="Any QoS properties relevant to this address URIs and the specified transport.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
          <mal:field name="priorityLevels" canBeNull="false"
                     comment="Number of QoS priority levels that this provider supports.">
            <mal:type name="Integer" area="MAL"/>
          </mal:field>
          <mal:field name="serviceURI"
                     comment="The Service URI that identifies the physical location of this service. NULL if represents a shared data provider (Broker).">
            <mal:type name="URI" area="MAL"/>
          </mal:field>
          <mal:field name="dataURI"
                     comment="The data URI that identifies the physical location of the publish and subscribe interface. NULL if service does not use publish and subscribe operations or if a shared data provider is to be used.">
            <mal:type name="URI" area="MAL"/>
          </mal:field>
          <mal:field name="dataName"
                     comment="This field is used to identify a shared data provider (broker). NULL if not using a shared data provider.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Login" number="2"
                 comment="The Login service defines the primary mechanism for the submission of authentication details to a deployment specific security system. It supports operations to allow a user to login, logout, report available roles, and also handover the login to another user.&#xA;The service is closely tied to the Access Control aspect of the MAL where the returned authentication identifiers are used in the MAL message header to authenticate and authorise message via Access Control.&#xA;The login service supports the concept of roles, where users may log in with a specific role; the meaning of each role is mission-specific, however it is expected that a specific role allocates the user privileges to invoke operations on mission operation services.&#xA;The use of login roles is optional but if they are used then the role details are held in the COM archive and the COM archive operations are used to manage the role definitions.&#xA;The form in which the password is sent to the Login service provider must be agreed upon beforehand and is dependent on the security system deployed. For example, most security implementations do not recommend the use of plain text passwords but rather some encrypted version of the password. For this reason the contents of the messages sent between the login service consumer and provider during authentication handshaking are implementation-specific.&#xA;The authentication and authorisation concept of the MO services is covered in section 3.6 of the Reference Model (R2).">
      <mal:documentation name="High Level Requirements" order="1">The login service shall provide:
&lt;ol&gt;
 &lt;li&gt;the capability for logging in;&lt;/li&gt;
 &lt;li&gt;the capability for logging out;&lt;/li&gt;
 &lt;li&gt;the capability for reporting the list of possible roles for a login profile;&lt;/li&gt;
 &lt;li&gt;the capability to hand over an existing login from one user to another.&lt;/li&gt;
&lt;/ol&gt;</mal:documentation>
      <mal:documentation name="Functional Requirements" order="2"/>
      <mal:capabilitySet number="1">
        <mal:requestIP name="login" number="1" supportInReplay="false"
                       comment="The login operation allows a user to log in to the system. A user can log in more than once by using a different role; however, a specific deployment may place limits on the number of users that may use a specific role, and in that case will fail the login operation.">
          <mal:messages>
            <mal:request>
              <mal:field name="userDetails"
                         comment="The userDetails field shall contain the details of the new user and role combination.&#xA;If the username field of the supplied Profile structure is either the wildcard '*' or empty an INVALID error shall be returned.&#xA;If the role field of the supplied Profile structure is either the wildcard '*' or empty an INVALID error shall be returned.&#xA;If roles are required by the system and the role field of the supplied Profile structure is NULL then an INVALID error shall be returned.&#xA;The role field of the supplied Profile structure may be NULL if roles are not used by the system.&#xA;An UNKNOWN error shall be returned if the username, password and role combination are not correct for the system i.e. unknown user/role or incorrect password.&#xA;A DUPLICATE error shall be returned if the username and role combination is currently in use.&#xA;A TOO_MANY error shall be returned if the username or role are already used and exceed the permitted maximum usage value (deployment dependent).&#xA;If the login is successful the provider should create a new LoginInstance COM object and store it in the COM archive.&#xA;The related link of the new LoginInstance COM object shall be set to the requested LoginRole COM object.">
                <mal:type name="Profile" service="Login" area="Common"/>
              </mal:field>
              <mal:field name="password">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="authId"
                         comment="The returned authId field shall be used as the authenticationId field in future MAL messages by the consumer MAL for authentication. The token is specific to the user and role in use.">
                <mal:type name="Blob" area="MAL"/>
              </mal:field>
              <mal:field name="objInstId"
                         comment="The returned objInstId field shall contain the LoginInstance COM object instance identifier that was created by the login operation.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Username/role combination currently in use.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Role concurrent session limit count exceeded.">
              <mal:type name="TOO_MANY" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Unknown username/role/password combination.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="logout" number="2" supportInReplay="false"
                      comment="The logout operation allows a user to log out from the system. No information is passed in the message as the MAL authentication Id is enough to identify the login.">
          <mal:messages>
            <mal:submit comment="Upon reception of the message the operation shall remove the matched user from the set of logged in users.&#xA;No errors shall be returned by this operation."/>
          </mal:messages>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="reportRoles" number="3" supportInReplay="false"
                       comment="The reportRoles operation returns the list of available roles for a specific user. This operation is expected to be called before a user logs in so that the software can provide a list of possible roles.">
          <mal:messages>
            <mal:request>
              <mal:field name="username"
                         comment="The username field shall hold the details of the user.&#xA;If the username field is either the wildcard '*', NULL or empty an INVALID error shall be returned.">
                <mal:type name="Identifier" area="MAL"/>
              </mal:field>
              <mal:field name="password"
                         comment="An UNKNOWN error shall be returned if the username and password combination are not correct for the system i.e. unknown user or incorrect password.">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="permittedRoles"
                         comment="The operation shall return a list of roles that are permitted for the user or NULL if roles are not used by the system.">
                <mal:type list="true" name="Identifier" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown username/password combination.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:requestIP name="handover" number="4" supportInReplay="false"
                       comment="The handover operation allows an existing login to be transferred to a new user. Two cases are expected here, the first is where the operation is used to change the user's current role, and the second is where an operations context is handed over to another user.">
          <mal:messages>
            <mal:request>
              <mal:field name="newUserDetails"
                         comment="The newUserDetails field shall contain the details of the new user and role combination.&#xA;If the username field of the supplied Profile structure is either NULL, the wildcard '*', or empty an INVALID error shall be returned.&#xA;If the role field of the supplied Profile structure is either the wildcard '*' or empty an INVALID error shall be returned.&#xA;If roles are required by the system and the role field of the supplied Profile structure is NULL then an INVALID error shall be returned.&#xA;The role field of the supplied Profile structure may be NULL if roles are not used by the system.&#xA;An UNKNOWN error shall be returned if the username, password and role combination are not correct for the system i.e. unknown user/role or incorrect password.&#xA;A DUPLICATE error shall be returned if the username and role combination is currently in use.&#xA;A TOO_MANY error shall be returned if the username or role are already used and exceed the permitted maximum usage value (deployment dependent).&#xA;The DUPLICATE and TOO_MANY checks shall take into account the fact that current operator/role combination will be logged out after the handover operation completes.&#xA;If the handover is successful the provider should create a new LoginInstance COM object and store it in the COM archive.&#xA;The related link of the new LoginInstance COM object shall be set to the requested LoginRole COM object.&#xA;The source link of the new LoginInstance COM object shall be set to NULL.&#xA;The provider should update in the COM archive the LoginInstance COM object that represents the previous login by setting its source link to the object instance identifier of the new LoginInstance COM object.">
                <mal:type name="Profile" service="Login" area="Common"/>
              </mal:field>
              <mal:field name="newUserPassword">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="newAuthId"
                         comment="The returned newAuthId field shall be used as the authenticationId field in future MAL messages by the consumer MAL for authentication. The token is specific to the new user and role in use.">
                <mal:type name="Blob" area="MAL"/>
              </mal:field>
              <mal:field name="newObjInstId"
                         comment="The returned newObjInstId field shall contain the LoginInstance COM object instance identifier that was created by the operation.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown username/role/password combination.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Role concurrent session limit count exceeded.">
              <mal:type name="TOO_MANY" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Username/role combination currently in use.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="Profile" shortFormPart="1"
                       comment="The Profile structure contains details of the user who is logging on to take a specified role.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="username" canBeNull="false" comment="The name of the user.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="role" comment="The optional role of the user.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Instances of a user login shall be represented as LoginInstance COM object.&#xA;Instances of a user role shall be represented as LoginRole COM object.&#xA;LoginInstance objects shall be created by the login and handover operations.&#xA;The object instance identifier for a LoginInstance object shall be populated by the provider of the Login service.&#xA;The LoginInstance object shall use the related link to indicate which LoginRole (if any) the login uses.&#xA;The LoginInstance object shall use the source link to indicate which LoginInstance (if any) the login was handed over to.&#xA;If a login has not been handed over to another login then the source link of the LoginInstance object shall be set to NULL.">
          <com:object name="LoginInstance" number="1">
            <com:objectType>
              <mal:type name="Profile" service="Login" area="Common"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="2" service="Login" area="Common"/>
            </com:relatedObject>
            <com:sourceObject>
              <com:objectType number="1" service="Login" area="Common"/>
            </com:sourceObject>
          </com:object>
          <com:object name="LoginRole" number="2"
                      comment="The body of the LoginRole object is the role name Identifier.">
            <com:objectType>
              <mal:type name="Identifier" area="MAL"/>
            </com:objectType>
          </com:object>
        </com:objects>
        <com:events comment="When a user logs in a LoginEvent COM event shall be generated.&#xA;When a user logs out a LogoutEvent COM event shall be generated.&#xA;When the handover operation is successful a LogoutEvent COM event shall be generated for the previous login and a LoginEvent COM event shall be generated for the new login.&#xA;The LoginEvent event shall use the related link to indicate which LoginInstance object is being logged in.&#xA;The LogoutEvent event shall use the related link to indicate which LoginInstance object is being logged out.&#xA;The events shall not use the COM object source link and shall set it to NULL.&#xA;The events shall be published using the COM event service.">
          <com:event name="LoginEvent" number="3">
            <com:relatedObject>
              <com:objectType number="1" service="Login" area="Common"/>
            </com:relatedObject>
          </com:event>
          <com:event name="LogoutEvent" number="4">
            <com:relatedObject>
              <com:objectType number="1" service="Login" area="Common"/>
            </com:relatedObject>
          </com:event>
        </com:events>
        <com:archiveUsage comment="LoginInstance objects should be stored in the COM archive.&#xA;When a login service event is published, the event object should be stored in the COM archive by the publisher.&#xA;LoginRole objects shall be stored in the COM archive.&#xA;The login service shall use the COM archive operations for maintaining the login roles."/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Interact" number="3"
                 comment="The interact service allows a consumer to raise interactions that can be completed by another consumer of the interact service in the system. The expected use is for software components of a system to request decision input or extra information from user of the system:&#xA;&lt;&lt; deployment diagram &gt;&gt;&#xA;There are four basic types of interaction supported by the service, the first is a simple acknowledge where a user can simply acknowledge the interaction, the second is a confirm where a user can confirm or reject the interaction, the third is a choice selection where the user selects from a supplied set of options, and the final interaction is a request for values where the user supplies a set of data values to the request.&#xA;The basic sequence of interaction is below:&#xA;&lt;&lt; sequence diagram &gt;&gt;&#xA;The interaction requests can contain a response timeout field that provides the interaction service provider with an upper time in which a response is required, if a response is not received in this time period, then the provider returns a TIMEDOUT error to the consumer that raised the interaction.&#xA;An interaction service provider implementation is responsible for determining which users may provide the interaction response and also for managing the situation where several users attempt to provide a response. For each interaction operation only one response will be returned to the consumer that initiated the interaction; it is the responsibility of the interaction service provider to ensure this is the case and also to inform the failed users that their interaction response was not used.">
      <mal:documentation name="High Level Requirements" order="1">The interact service shall provide:
&lt;ol&gt;
 &lt;li&gt;the capability for requesting an acknowledge interaction;&lt;/li&gt;
 &lt;li&gt;the capability for responding to an acknowledge interaction;&lt;/li&gt;
 &lt;li&gt;the capability for requesting a confirm interaction;&lt;/li&gt;
 &lt;li&gt;the capability for responding to a confirm interaction;&lt;/li&gt;
 &lt;li&gt;the capability for requesting a choice interaction;&lt;/li&gt;
 &lt;li&gt;the capability for responding to a choice interaction;&lt;/li&gt;
 &lt;li&gt;the capability for requesting a get values interaction;&lt;/li&gt;
 &lt;li&gt;the capability for responding to a get values interaction;&lt;/li&gt;
 &lt;li&gt;the capability for listing the currently active interactions;&lt;/li&gt;
 &lt;li&gt;the capability for cancelling an interaction.&lt;/li&gt;
&lt;/ol&gt;
        The interact service shall use the event service for notifying consumers of new interactions and also completion of existing interactions.
      </mal:documentation>
      <mal:capabilitySet number="1">
        <mal:invokeIP name="raiseAcknowledge" number="1" supportInReplay="false"
                      comment="The raiseAcknowledge operation allows a consumer to request an acknowledge from a user/role. The user can only acknowledge the interaction; it cannot be declined (confirm is used in this case). It is expected to be used to allow a user to acknowledge that a specific operation can proceed for example. If no user or role is specified, then the interaction is for any user or role.&#xA;The interaction can be responded to via the matching respond operation.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="interactionDetails"
                         comment="If the destination field of the interactionDetails field is either the wildcard '*' or empty then the operation is for any user and the destinationIsRole field shall be ignored.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to FALSE, the destination field shall contain a user name.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to TRUE, the destination field shall contain a role name.&#xA;If an appropriate user or role cannot be identified then an UNKNOWN error shall be returned.">
                <mal:type name="InteractAcknowledgeDetails" service="Interact" area="Common"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement>
              <mal:field name="objInstId"
                         comment="The operation shall create new InteractRequest and InteractAckRequest COM objects to represent the interaction.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractRaised COM event shall be created and distributed by the service provider.&#xA;The acknowledgement objInstId field shall hold the COM object instance identifier of the InteractRequest COM object.&#xA;The returned COM object instance identifier shall be used by the matching respond operation to match this interaction.&#xA;The returned COM object instance identifier may be used by the cancelInteraction operation to cancel this interaction.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:acknowledgement>
            <mal:response comment="If responseTimeout field of the interactionDetails field contains a non-zero duration and no response has been received in that time then the interaction shall be considered timed out.&#xA;If the interaction has timed out then the provider shall create new InteractResult and InteractTimedoutResult COM objects.&#xA;If the interaction has timed out then the created timed out objects should be stored in the COM archive by the service provider.&#xA;If the interaction has timed out then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;If the interaction has timed out then a TIMEDOUT error shall be returned.&#xA;If this operation is cancelled, then a CANCELLED error shall be returned.&#xA;The response shall be returned when the interaction has been completed."/>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="User could not be found to satisfy interaction.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
        <mal:submitIP name="respondAcknowledge" number="2" supportInReplay="false"
                      comment="The respondAcknowledge operation is used to supply a response to an already raised acknowledge interaction.">
          <mal:messages>
            <mal:submit>
              <mal:field name="interactionId"
                         comment="The interactionId field contains the object instance identifier of the InteractRequest COM object that represents the interaction being acknowledged.&#xA;If the interactionId does not match any existing interaction then an UNKNOWN shall be returned.&#xA;If the authentication identifier of the SUBMIT message does not correspond to the correct user or role for the interaction then an AUTHENTICATION_FAIL error shall be returned.&#xA;If the interactionId matches an InteractRequest but it is not an Acknowledgement interaction then an INVALID error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has already had a response then a DUPLICATE error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has been cancelled with the cancelInteraction operation then a CANCELLED error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has timed out then a TIMEDOUT error shall be returned.&#xA;The operation shall create new InteractResult and InteractAckResult COM objects to represent the interaction response.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractComplete COM event shall be created and distributed by the service provider.&#xA;The matching raiseAcknowledge operation shall return the response at this point.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The respondee is not the correct user or role for the interaction.">
              <mal:type name="AUTHORISATION_FAIL" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested interaction is not known.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Matched interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction has already had a response.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction is not of the correct interaction type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:invokeIP name="raiseConfirm" number="3" supportInReplay="false"
                      comment="The raiseConfirm operation allows a consumer to request confirmation from a user/role. The user can confirm or decline the interaction; it is expected to be used to present a user with a 'Yes/No' confirmation choice. If no user or role is specified, then the interaction is for any user or role.&#xA;The interaction can be responded to via the matching respond operation.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="interactionDetails"
                         comment="If the destination field of the interactionDetails field is either the wildcard '*' or empty then the operation is for any user and the destinationIsRole field shall be ignored.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to FALSE, the destination field shall contain a user name.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to TRUE, the destination field shall contain a role name.&#xA;If an appropriate user or role cannot be identified then an UNKNOWN error shall be returned.">
                <mal:type name="InteractConfirmDetails" service="Interact" area="Common"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement>
              <mal:field name="objInstId"
                         comment="The operation shall create new InteractRequest and InteractConfirmRequest COM objects to represent the interaction.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractRaised COM event shall be created and distributed by the service provider.&#xA;The acknowledgement objInstId field shall hold the COM object instance identifier of the InteractRequest COM object.&#xA;The returned COM object instance identifier shall be used by the matching respond operation to match this interaction.&#xA;The returned COM object instance identifier may be used by the cancelInteraction operation to cancel this interaction.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:acknowledgement>
            <mal:response>
              <mal:field name="interactionResponse"
                         comment="If responseTimeout field of the interactionDetails field contains a non-zero duration and no response has been received in that time then the interaction shall be considered timed out.&#xA;If the interaction has timed out then the provider shall create new InteractResult and InteractTimedoutResult COM objects.&#xA;If the interaction has timed out then the created timed out objects should be stored in the COM archive by the service provider.&#xA;If the interaction has timed out then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;If the interaction has timed out then a TIMEDOUT error shall be returned.&#xA;If this operation is cancelled, then a CANCELLED error shall be returned.&#xA;The response shall be returned when the interaction has been completed.">
                <mal:type name="InteractConfirmResponse" service="Interact" area="Common"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="User could not be found to satisfy interaction.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
        <mal:submitIP name="respondConfirm" number="4" supportInReplay="false"
                      comment="The respondConfirm operation is used to supply a response to an already raised confirm interaction.">
          <mal:messages>
            <mal:submit>
              <mal:field name="interactionId"
                         comment="The interactionId field contains the object instance identifier of the InteractRequest COM object that represents the interaction being confirmed.&#xA;If the interactionId does not match any existing interaction then an UNKNOWN shall be returned.&#xA;If the authentication identifier of the SUBMIT message does not correspond to the correct user or role for the interaction then an AUTHENTICATION_FAIL error shall be returned.&#xA;If the interactionId matches an InteractRequest but it is not a Confirm interaction then an INVALID error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has already had a response then a DUPLICATE error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has been cancelled with the cancelInteraction operation then a CANCELLED error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has timed out then a TIMEDOUT error shall be returned.&#xA;The operation shall create new InteractResult and InteractConfirmResult COM objects to represent the interaction response.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractComplete COM event shall be created and distributed by the service provider.&#xA;The matching raiseConfirm operation shall return the response at this point.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="confirmation">
                <mal:type name="Boolean" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The matched interaction has already had a response.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested interaction is not known.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction is not of the correct interaction type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="The respondee is not the correct user or role for the interaction.">
              <mal:type name="AUTHORISATION_FAIL" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Matched interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:invokeIP name="raiseChoice" number="5" supportInReplay="false"
                      comment="The raiseChoice operation allows a consumer to request a user/role provide a choice from a set of predefined values. The user must pick one of the presented list of options; it is expected to be used to allow a user to select an option from the list of possible choices. If no user or role is specified, then the interaction is for any user or role.&#xA;The interaction can be responded to via the matching respond operation.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="interactionDetails"
                         comment="If the destination field of the interactionDetails field is either the wildcard '*' or empty then the operation is for any user and the destinationIsRole field shall be ignored.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to FALSE, the destination field shall contain a user name.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to TRUE, the destination field shall contain a role name.&#xA;If an appropriate user or role cannot be identified then an UNKNOWN error shall be returned.">
                <mal:type name="InteractChoiceDetails" service="Interact" area="Common"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement>
              <mal:field name="objInstId"
                         comment="The operation shall create new InteractRequest and InteractChoiceRequest COM objects to represent the interaction.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractRaised COM event shall be created and distributed by the service provider.&#xA;The acknowledgement objInstId field shall hold the COM object instance identifier of the InteractRequest COM object.&#xA;The returned COM object instance identifier shall be used by the matching respond operation to match this interaction.&#xA;The returned COM object instance identifier may be used by the cancelInteraction operation to cancel this interaction.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:acknowledgement>
            <mal:response>
              <mal:field name="interactionResponse"
                         comment="If responseTimeout field of the interactionDetails field contains a non-zero duration and no response has been received in that time then the interaction shall be considered timed out.&#xA;If the interaction has timed out then the provider shall create new InteractResult and InteractTimedoutResult COM objects.&#xA;If the interaction has timed out then the created timed out objects should be stored in the COM archive by the service provider.&#xA;If the interaction has timed out then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;If the interaction has timed out then a TIMEDOUT error shall be returned.&#xA;If this operation is cancelled, then a CANCELLED error shall be returned.&#xA;The response shall be returned when the interaction has been completed.">
                <mal:type name="InteractChoiceResponse" service="Interact" area="Common"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="User could not be found to satisfy interaction.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
        <mal:submitIP name="respondChoice" number="6" supportInReplay="false"
                      comment="The respondChoice operation is used to supply a response to an already raised choice interaction.">
          <mal:messages>
            <mal:submit>
              <mal:field name="interactionId"
                         comment="The interactionId field contains the object instance identifier of the InteractRequest COM object that represents the interaction being responded to.&#xA;If the interactionId does not match any existing interaction then an UNKNOWN shall be returned.&#xA;If the authentication identifier of the SUBMIT message does not correspond to the correct user or role for the interaction then an AUTHENTICATION_FAIL error shall be returned.&#xA;If the interactionId matches an InteractRequest but it is not a Choice interaction then an INVALID error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has already had a response then a DUPLICATE error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has been cancelled with the cancelInteraction operation then a CANCELLED error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has timed out then a TIMEDOUT error shall be returned.&#xA;The operation shall create new InteractResult and InteractChoiceResult COM objects to represent the interaction response.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractComplete COM event shall be created and distributed by the service provider.&#xA;The matching raiseChoice operation shall return the response at this point.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="choiceIndex">
                <mal:type name="UInteger" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The respondee is not the correct user or role for the interaction.">
              <mal:type name="AUTHORISATION_FAIL" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction is not of the correct interaction type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Matched interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested interaction is not known.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction has already had a response.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4">
        <mal:invokeIP name="getValues" number="7" supportInReplay="false"
                      comment="The getValues operation allows a consumer to request a set of new values from a user/role. The user must supply the set of values; it is expected to be used to allow a user to provide input values for an operation. If no user or role is specified, then the interaction is for any user or role.&#xA;The interaction can be responded to via the matching respond operation.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="interactionDetails"
                         comment="If the destination field of the interactionDetails field is either the wildcard '*' or empty then the operation is for any user and the destinationIsRole field shall be ignored.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to FALSE, the destination field shall contain a user name.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to TRUE, the destination field shall contain a role name.&#xA;If an appropriate user or role cannot be identified then an UNKNOWN error shall be returned.&#xA;For each entry in the defaultValues list field of the interactionDetails field, if the name field is either NULL or an empty string then an INVALID error shall be returned.&#xA;For each entry in the defaultValues list, the value field must be provided, even if it is empty (not NULL), so that the software used to request the value from an operator can determine the type of value required (Integer, Boolean, etc.).&#xA;For each entry in the defaultValues list, if the value field contains NULL then an INVALID error shall be returned as the receiving software will not be able to determine the desired value type.">
                <mal:type name="InteractValueDetails" service="Interact" area="Common"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement>
              <mal:field name="objInstId"
                         comment="The operation shall create new InteractRequest and InteractValueRequest COM objects to represent the interaction.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractRaised COM event shall be created and distributed by the service provider.&#xA;The acknowledgement objInstId field shall hold the COM object instance identifier of the InteractRequest COM object.&#xA;The returned COM object instance identifier shall be used by the matching respond operation to match this interaction.&#xA;The returned COM object instance identifier may be used by the cancelInteraction operation to cancel this interaction.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:acknowledgement>
            <mal:response>
              <mal:field name="interactionResponse"
                         comment="If responseTimeout field of the interactionDetails field contains a non-zero duration and no response has been received in that time then the interaction shall be considered timed out.&#xA;If the interaction has timed out then the provider shall create new InteractResult and InteractTimedoutResult COM objects.&#xA;If the interaction has timed out then the created timed out objects should be stored in the COM archive by the service provider.&#xA;If the interaction has timed out then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;If the interaction has timed out then a TIMEDOUT error shall be returned.&#xA;If this operation is cancelled, then a CANCELLED error shall be returned.&#xA;The response shall be returned when the interaction has been completed.">
                <mal:type name="InteractValueResponse" service="Interact" area="Common"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Invalid values in the request.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="User could not be found to satisfy interaction.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
        <mal:submitIP name="respondValues" number="8" supportInReplay="false"
                      comment="The respondValues operation is used to supply a response to an already raised get values interaction.">
          <mal:messages>
            <mal:submit>
              <mal:field name="interactionId"
                         comment="The interactionId field contains the object instance identifier of the InteractRequest COM object that represents the interaction being responded to.&#xA;If the interactionId does not match any existing interaction then an UNKNOWN shall be returned.&#xA;If the authentication identifier of the SUBMIT message does not correspond to the correct user or role for the interaction then an AUTHENTICATION_FAIL error shall be returned.&#xA;If the interactionId matches an InteractRequest but it is not a getValues interaction then an INVALID error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has already had a response then a DUPLICATE error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has been cancelled with the cancelInteraction operation then a CANCELLED error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has timed out then a TIMEDOUT error shall be returned.&#xA;The operation shall create new InteractResult and InteractValueResult COM objects to represent the interaction response.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractComplete COM event shall be created and distributed by the service provider.&#xA;The matching getValues operation shall return the response at this point.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="newValues">
                <mal:type list="true" name="NamedValue" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The matched interaction is not of the correct interaction type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="The respondee is not the correct user or role for the interaction.">
              <mal:type name="AUTHORISATION_FAIL" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested interaction is not known.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction has already had a response.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Matched interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5">
        <mal:requestIP name="listActiveInteractions" number="9" supportInReplay="false"
                       comment="The listActiveInteractions operation returns the list of active interactions, i.e. those that have not been either had a responded, cancelled or timed out.">
          <mal:messages>
            <mal:request/>
            <mal:response>
              <mal:field name="activeInteractionObjInstIds"
                         comment="The operation shall return a list of ObjectDetails.&#xA;Each entry in the returned list represents a single active interaction.&#xA;The related field of the returned ObjectDetails holds the object instance identifier of the InteractRequest COM object that represents the active interaction.&#xA;The source field of the returned ObjectDetails holds the domain and object instance identifier of the interaction specific COM object for the active interaction.&#xA;The COM archive should be used to obtain the interaction specific details.">
                <mal:type list="true" name="ObjectDetails" area="COM"/>
              </mal:field>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="6">
        <mal:submitIP name="cancelInteraction" number="10" supportInReplay="false"
                      comment="The cancelInteraction operation allows a consumer of the service to cancel an active interaction.">
          <mal:messages>
            <mal:submit>
              <mal:field name="interactionId"
                         comment="The interactionId field contains the object instance identifier of the InteractRequest COM object that represents the interaction being cancelled.&#xA;If the interactionId does not match any existing interaction then an UNKNOWN shall be returned.&#xA;If the interactionId matches an InteractRequest but it has already had a response then a DUPLICATE error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has been cancelled with the cancelInteraction operation then a CANCELLED error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has timed out then a TIMEDOUT error shall be returned.&#xA;The operation shall create new InteractResult and InteractCancelResult COM objects to represent the interaction response.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractComplete COM event shall be created and distributed by the service provider.&#xA;The matching raise operation shall return the CANCELLED error at this point.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Requested interaction is not known.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction has already had a response.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was already cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Matched interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="InteractDetailsBase"
                       comment="The base Interact service request structure. Holds fields common to all Interact service requests.">
          <mal:field name="destination" canBeNull="false"
                     comment="Name of user or role to interact with, set to a wildcard or empty if for anyone.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="destinationIsRole" canBeNull="false"
                     comment="True if destination is a role name, value ignored if no destination supplied.">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="responseTimeout" canBeNull="false"
                     comment="Duration in which response must be received. '0' if no timeout required.">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="displayMessage" canBeNull="false" comment="Message to present to user.">
            <mal:type name="String" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="InteractAcknowledgeDetails" shortFormPart="1"
                       comment="The InteractAcknowledgeDetails structure holds the fields required for an interaction acknowledgement.">
          <mal:extends>
            <mal:type name="InteractDetailsBase" service="Interact" area="Common"/>
          </mal:extends>
        </mal:composite>
        <mal:composite name="InteractConfirmDetails" shortFormPart="2"
                       comment="The InteractConfirmDetails structure holds the fields required for an interaction confirmation.">
          <mal:extends>
            <mal:type name="InteractDetailsBase" service="Interact" area="Common"/>
          </mal:extends>
        </mal:composite>
        <mal:composite name="InteractChoiceDetails" shortFormPart="3"
                       comment="The InteractChoiceDetails structure holds the fields required for an interaction choice query.">
          <mal:extends>
            <mal:type name="InteractDetailsBase" service="Interact" area="Common"/>
          </mal:extends>
          <mal:field name="allowedChoices" canBeNull="false"
                     comment="Set of choices for operator to select from.">
            <mal:type list="true" name="String" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="InteractValueDetails" shortFormPart="4"
                       comment="The InteractValueDetails structure holds the fields required for an interaction value query.">
          <mal:extends>
            <mal:type name="InteractDetailsBase" service="Interact" area="Common"/>
          </mal:extends>
          <mal:field name="defaultValues" canBeNull="false"
                     comment="Default values to provide to operator. Both parts of the Element pairs structure must be populated as it provides the value type required. The first part of the pair shall always be a String that contains the name of the value required.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="InteractConfirmResponse" shortFormPart="6"
                       comment="The InteractConfirmResponse structure represents a response to an interaction confirm query.">
          <mal:field name="confirmation" canBeNull="false" comment="Response to interaction.">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="InteractChoiceResponse" shortFormPart="7"
                       comment="The InteractChoiceResponse structure represents a response to a choice interaction query.">
          <mal:field name="choiceIndex" canBeNull="false"
                     comment="Index of chosen value from provided list.">
            <mal:type name="UInteger" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="InteractValueResponse" shortFormPart="8"
                       comment="The InteractValueResponse structure represents a response to a value interaction query.">
          <mal:field name="newValues" canBeNull="false"
                     comment="New values provided by operator. Only changed values from those supplied in the request shall be returned. The type of the value returned must match that of the default value sent in the request.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Two COM objects shall be used to hold an interaction request details, the first is a InteractRequest COM object and the second a COM object that holds the actual interaction specific details of the interaction.&#xA;The actual interaction request details shall be represented as one of the specific interaction COM objects (InteractAckRequest, InteractConfirmRequest, InteractChoiceRequest, InteractValueRequest).&#xA;The InteractRequest object shall use the source link to indicate which actual interaction request details COM object (InteractAckRequest, InteractConfirmRequest, InteractChoiceRequest, InteractValueRequest) it uses.&#xA;Two COM objects shall be used to hold an interaction response details, the first is a InteractResult COM object and the second a COM object that holds the actual interaction specific response of the interaction.&#xA;The actual interaction response details shall be represented as one of the specific interaction COM objects (InteractTimedoutResult, InteractCancelResult, InteractAckResult, InteractConfirmResult, InteractChoiceResult, InteractValueResult).&#xA;The InteractResult object shall use the related link to indicate which interaction request it is the response to.&#xA;The InteractResult object shall use the source link to indicate which actual interaction response details COM object (InteractTimedoutResult, InteractCancelResult, InteractAckResult, InteractConfirmResult, InteractChoiceResult, InteractValueResult) it uses.">
          <com:object name="InteractRequest" number="1"
                      comment="The body of the object holds the ObjectType that is combined with the related link to locate the actual Interact COM Object that holds the request.">
            <com:sourceObject/>
          </com:object>
          <com:object name="InteractResult" number="2"
                      comment="The body of the object holds the ObjectType that is combined with the related link to locate the actual Interact COM Object that holds the result.">
            <com:relatedObject>
              <com:objectType number="1" service="Interact" area="Common"/>
            </com:relatedObject>
            <com:sourceObject/>
          </com:object>
          <com:object name="InteractAckRequest" number="5">
            <com:objectType>
              <mal:type name="InteractAcknowledgeDetails" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractConfirmRequest" number="6">
            <com:objectType>
              <mal:type name="InteractConfirmDetails" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractChoiceRequest" number="7">
            <com:objectType>
              <mal:type name="InteractChoiceDetails" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractValueRequest" number="8">
            <com:objectType>
              <mal:type name="InteractValueDetails" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractTimedoutResult" number="9"/>
          <com:object name="InteractCancelResult" number="10"/>
          <com:object name="InteractAckResult" number="11"/>
          <com:object name="InteractConfirmResult" number="12">
            <com:objectType>
              <mal:type name="InteractConfirmResponse" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractChoiceResult" number="13">
            <com:objectType>
              <mal:type name="InteractChoiceResponse" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractValueResult" number="14">
            <com:objectType>
              <mal:type name="InteractValueResponse" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
        </com:objects>
        <com:events comment="When an interaction is raised it shall cause an InteractRaised COM event to be published using the COM event service.&#xA;The related link of the InteractRaised event shall be the InteractRequest COM object that represents the interaction.&#xA;The source link of the InteractRaised event shall be the COM object that raised the interaction, most likely a LoginInstance COM Object.&#xA;The body of the InteractRaised event shall be the object identifier of the desired destination, either a specific LoginInstance or LoginRole COM object.&#xA;When an interaction is responded to it shall cause an InteractComplete COM event to be published using the COM event service.&#xA;The related link of the InteractComplete object shall be the InteractResult COM object that represents the interaction response.&#xA;The source link of the InteractComplete object shall be the COM object that responded to the interaction, most likely a LoginInstance COM Object.">
          <com:event name="InteractRaised" number="3">
            <com:objectType>
              <mal:type name="ObjectId" area="COM"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Interact" area="Common"/>
            </com:relatedObject>
            <com:sourceObject comment="The source shall link to the COM object that raised the interaction, most likely a LoginInstance COM Object"/>
          </com:event>
          <com:event name="InteractComplete" number="4">
            <com:relatedObject>
              <com:objectType number="2" service="Interact" area="Common"/>
            </com:relatedObject>
            <com:sourceObject comment="The source shall link to the COM object that completed the interaction, most likely a LoginInstance COM Object."/>
          </com:event>
        </com:events>
        <com:archiveUsage comment="All interact objects should be stored in the COM archive by the provider of the service.&#xA;When an interaction event is published, the event object should be stored in the COM archive by the publisher."/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Configuration" number="5"
                 comment="The Configuration service allows service providers to publish information about their configuration and consumers to manage the configuration of the provider.&#xA;The contents of the configuration of a service is service specific, but the management of these configurations has been standardised in this service. Implementations of this service may also use bespoke methods for configuration upload (such as files) which is outside the scope of this specification; however, the status and management of these uploaded configurations can still be managed with this service.&#xA;Some other services may offer online update/modification of aspects of their definitions and configuration through the definition aspects of the Common Model; this is separate from the facilities provided by this service, which is to allow the management of implementation specific configurations in a standard way.&#xA;The service uses the COM entity to represent the different types of configuration allowed by a component, the different configurations for each of those entities is represented by a COM definition. The different configuration aspects of a service are represented by entity (for example, this could be colour balance or frame rate for a camera service) and the different configurations of those aspects are represented by definition (for example, that could be different frame rate values for the previous example).&#xA;Not all operations are required to be implemented, for example if the possible configurations are fixed in the component and cannot be changed then the COM operations to modify the definition need not be implemented.&#xA;Configurations are activated/deactivated by making one of the definitions the only allowed currently non-deleted definition. For example, COM only permits a single definition to be marked as non-deleted for an entity, for the configuration service this would be the active configuration for that entity.&#xA;The entity and definition identifiers used by this service are not tied to anything else in the MO architecture therefore their meaning is completely service dependent.">
      <mal:capabilitySet number="1">
        <mal:invokeIP name="activate" number="1" supportInReplay="false"
                      comment="The activate operation instructs a service provider to make a specific configuration active. As it is possible that it may take an indeterminate amount of time to activate a specific configuration the INVOKE pattern is used.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="configObjInstId"
                         comment="The operation shall take an COM object instance identifier that identifies the configuration to activate.&#xA;An UNKNOWN error shall be returned if the object instance indentifier does not match an existing configuration.&#xA;If the object instance identifier does not reference a valid configuration for the service provider an INVALID error shall be returned.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement comment="The empty acknowledgement shall be returned if a matching configuration exists."/>
            <mal:response comment="The configuration shall be made active after the acknowledgement is sent and before the response is sent.&#xA;The INVALID error may be returned as a result of a service specific data check.&#xA;If the operation fails the previous configuration shall remain active.&#xA;A ConfigurationActivation COM Event shall be published if the new configuration has been made active."/>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Requested configuration is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested configuration is invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
      </mal:capabilitySet>
      <com:features>
        <com:objects comment="The entity identifier shall be the unique identifier of the Configuration for the domain.&#xA;The definitions of the Configurations shall be maintained by using the relevant COM Definition update operations.&#xA;Following the COM rules for definition, only one definition shall be active for an entity at a time.&#xA;The activate operation shall be used to change the currently active configuration.">
          <com:object name="ConfigurationDefinition" number="1"
                      comment="Represents a configuration definition for a service provider.">
            <com:objectType>
              <mal:type name="Boolean" area="MAL"/>
            </com:objectType>
            <com:sourceObject comment="The source links to the actual configuration definition for the provider."/>
          </com:object>
        </com:objects>
        <com:events>
          <com:event name="ConfigurationActivationEvent" number="2"
                     comment="The event shall be raised when a configuration is made active. The body of the event is the previously active configuration which shall be NULL if no configuration was previously active.">
            <com:objectType>
              <mal:type name="Long" area="MAL"/>
            </com:objectType>
            <com:relatedObject comment="The related object is the activated configuration.">
              <com:objectType number="1" service="Configuration" area="Common"/>
            </com:relatedObject>
            <com:sourceObject comment="The source of the event is the object that triggered the activation, most likely the activateConfiguration operation."/>
          </com:event>
        </com:events>
        <com:archiveUsage/>
      </com:features>
    </mal:service>
    <mal:errors>
      <mal:error name="TIMEDOUT" number="70010" comment=""/>
      <mal:error name="CANCELLED" number="70011" comment=""/>
    </mal:errors>
  </mal:area>
</mal:specification>