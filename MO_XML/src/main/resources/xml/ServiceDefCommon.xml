<?xml version="1.0" encoding="UTF-8"?>
<mal:specification xmlns:com="http://www.ccsds.org/schema/COMSchema"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:mal="http://www.ccsds.org/schema/ServiceSchema">
  <mal:area name="Common" number="3" version="1"
            comment="This section details the Common Services; the structures used by the services are detailed in section 4. The services and structures are defined in terms of the MO Message Abstraction Layer (MAL) which is defined in reference [2], so it is possible to deploy them over any supported protocol and message transport.&#xA;The services defined here are also specified in terms of the COM which is defined in reference [3]. &#xA;To aid comprehension several tables are included for each service and operation definition. The table formats are the same as those used for the specification of the MO COM Services in reference [3]. The formats are fully described in reference [2] in section 2 and in reference [3] section 2, for COM usage.&#xA;All service specifications in this document are part of the Common Area. This has a short form number of '3'.&#xA;">
    <mal:service xsi:type="com:ExtendedServiceType" name="Directory" number="1"
                 comment="The Directory service allows service providers to publish information about their services and consumers to discover services to connect to.&#xA;The service directory is represented as a set of Nodes. Each Node is identified by a Domain, Network and Session identifier.&#xA;Each Node is either a local Node or an external Node, external Nodes reside in another Directory Service and contain only the address information of that external Directory Service.&#xA;Local Nodes contain information about actual services. As each service is associated to a specific Domain/Network/Session it is therefore located at a specific Node in the Directory Service.&#xA;The local Node occurrence structure contains a list of ServiceDetails structures, each one detailing a particular service and the providers of that service. Each ProviderInformation structure then contains one or more ServiceAddress structures, each of these defines one way to contact that service provider. It is possible for a provider to offer more than one ServiceAddress as it allows the provider to support multiple message transports and encodings. Each service address lists the supported QoS levels and associated QoS properties available for that connection, a service consumer indicates the required QoS level and priority to a service provider by using these values in the initial message.&#xA;For services that have operations based on the publish and subscribe interaction pattern there may be required a separate URI for the broker component. To support this the directory service holds two URIs for each service, the URI of the primary interface and also a secondary one which, if present, is used for publish and subscribe-based operations. It is also possible that a publish and subscribe broker component is shared between more than one provider, known as a shared data source, and in this case the broker should be published as a directory service entry without a primary interface URI. The sharing providers should reference it by naming it in the 'dataName' field in their directory service entry.&#xA;Service provider information is added/removed from the Node using the Directory service publishService/withdrawService operations.&#xA;The lookupService operation provides more flexible searching abilities for Directory service consumers.&#xA;">
      <mal:capabilitySet number="1">
        <mal:requestIP name="lookupService" number="1" supportInReplay="true"
                       comment="The lookup operation allows a service consumer to query the directory service to determine if a specific service is available. If no match is found, then an empty list is returned.&#xA;">
          <mal:messages>
            <mal:request comment="The lookup operation shall take a single ServiceFilter structure.&#xA;If the final identifier of the domain is the wildcard '*', then all sub-domains shall be searched for matches.&#xA;The wildcard shall only be used for the final component of the domain.&#xA;If the domain field is either NULL or the wildcard '*' then all domains shall be matched.&#xA;If the network field is either NULL or the wildcard '*' then all Networks shall be matched.&#xA;If the session field is either NULL or the wildcard '*' then all Sessions shall be matched.&#xA;For all other fields in the ServiceFilter the wildcard '*' or NULL may be used to match all possible services/providers.&#xA;">
              <mal:type name="ServiceFilter" service="Directory" area="Common"/>
            </mal:request>
            <mal:response comment="The operation shall return a list of matches to the query.">
              <mal:type list="true" name="ServiceDetails" service="Directory" area="Common"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:submitIP name="publishService" number="2" supportInReplay="false"
                      comment="The publishService operation adds new, or updates existing, entries in the list of services held in the directory service.&#xA;">
          <mal:messages>
            <mal:submit comment="The operation shall take a list of NodeDetails structures.&#xA;For each NodeDetails structure if any of the fields of the domain/session/network fields are either NULL, empty, or contain the wildcard '*' an INVALID error shall be returned.&#xA;If an error is being returned then all updates shall be ignored.&#xA;">
              <mal:type list="true" name="NodeDetails" service="Directory" area="Common"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Submitted values are invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested Node was not found.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="withdrawService" number="3" supportInReplay="false"
                      comment="The withdrawService operation removes existing entries from the list of services held in the directory service. If no match is found for the withdraw request, then nothing is changed.&#xA;">
          <mal:messages>
            <mal:submit comment="The operation shall take a list of NodeDetails structures.&#xA;For each NodeDetails structure if any of the fields of the domain/session/network fields are either NULL, empty, or contain the wildcard '*' an INVALID error shall be returned.&#xA;If the fields do not match an existing local Node then an UNKNOWN error shall be returned.&#xA;Each matched provider shall have its details updated with the supplied details.&#xA;If an error is being returned then all updates shall be ignored.&#xA;">
              <mal:type list="true" name="NodeDetails" service="Directory" area="Common"/>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Service to withdraw was not found.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted values are invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="Node"
                       comment="The Node structure holds all information for the Directory service of a specific Domain/Network/Session.&#xA;">
          <mal:field name="sessionType" canBeNull="false"
                     comment="The session type of this service.">
            <mal:type name="SessionType" area="MAL"/>
          </mal:field>
          <mal:field name="sourceSessionName"
                     comment="If this is part of a replay session, this field holds the session name of the source session. NULL otherwise">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="LocalNode" shortFormPart="1"
                       comment="Represents a Node in the local Directory service.&#xA;">
          <mal:extends>
            <mal:type name="Node" service="Directory" area="Common"/>
          </mal:extends>
          <mal:field name="services" canBeNull="false"
                     comment="The list of services at this Node in the directory tree.">
            <mal:type list="true" name="ServiceDetails" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ExternalNode" shortFormPart="2"
                       comment="Indicates that a Node is contained in an external Directory service.&#xA;">
          <mal:extends>
            <mal:type name="Node" service="Directory" area="Common"/>
          </mal:extends>
          <mal:field name="directoryProviders" canBeNull="false"
                     comment="The information about the providers of the external Directory service that hold the information for this Node.">
            <mal:type list="true" name="ProviderInformation" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="NodeDetails" shortFormPart="4"
                       comment="Represents the combination of the Domain/Network/Session information and the service details held at that Node.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="domain" canBeNull="false" comment="The service provider domain.&#xA;">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="network" canBeNull="false" comment="The service provider network.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="node" canBeNull="false" comment="The service provider details.&#xA;">
            <mal:type name="LocalNode" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceFilter" shortFormPart="5"
                       comment="The ServiceFilter structure holds all information required by the Directory service for service lookup operation. The field filters are AND'd together.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="domain"
                     comment="The domain to query. Can be NULL in which case matches all values.&#xA;">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="network"
                     comment="The network to match. Can be NULL or '*' which matches all values.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="sessionType"
                     comment="The session type to match. Can be NULL in which case matches all values.&#xA;">
            <mal:type name="SessionType" area="MAL"/>
          </mal:field>
          <mal:field name="sessionName"
                     comment="The session name to match. Can be NULL or '*' which matches all values.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="area" canBeNull="false"
                     comment="The area of this service taken from the Area Identifier of the service specification. Can be '0' which matches all values.&#xA;">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="service" canBeNull="false"
                     comment="The service taken from the Service Identifier of the service specification. Can be '0' which matches all values.&#xA;">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="version" canBeNull="false"
                     comment="The version of this service taken from the Area Version of the service specification. Can be '0' which matches all values.&#xA;">
            <mal:type name="UOctet" area="MAL"/>
          </mal:field>
          <mal:field name="requiredCapabilities"
                     comment="List of required capabilities. If NULL then matches any.">
            <mal:type list="true" name="Integer" area="MAL"/>
          </mal:field>
          <mal:field name="serviceProviderName"
                     comment="The required service provider. Can be NULL or '*' which matches all values.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceDetails" shortFormPart="6"
                       comment="The ServiceDetails structure holds all information required by the Directory service for a single service.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="area" canBeNull="false"
                     comment="The area of this service taken from the numeric Area identifierof the service specification.&#xA;">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="service" canBeNull="false"
                     comment="The service taken from the numeric Service identifier of the service specification.&#xA;">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="version" canBeNull="false"
                     comment="The version of this service taken from the Service Version of the service specification.&#xA;">
            <mal:type name="UOctet" area="MAL"/>
          </mal:field>
          <mal:field name="providers" canBeNull="false"
                     comment="The list of providers of this service.">
            <mal:type list="true" name="ProviderInformation" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ProviderInformation" shortFormPart="7"
                       comment="The ProviderInformation structure holds all information required by the Directory service about a provider of a service and its capabilities. The structure contains a list of ServiceAddress structures; a service may support more than one transport technology and therefore can be reached using more than one address.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="serviceProviderName" canBeNull="false"
                     comment="The provider-defined name of the service; allows multiple service providers of the same service type to coexist in the directory service. This value is the unique service provider name.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="supportedCapabilities" canBeNull="false"
                     comment="The set of capabilities set numbers that this service occurrence supports.">
            <mal:type list="true" name="Integer" area="MAL"/>
          </mal:field>
          <mal:field name="serviceProperties" canBeNull="false"
                     comment="Allows the passing of deployment specific service properties.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
          <mal:field name="serviceAddresses" canBeNull="false"
                     comment="List of service address for this service provider.">
            <mal:type list="true" name="ServiceAddress" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceAddress" shortFormPart="8"
                       comment="The ServiceAddress structure holds all information required by the Directory service about a service URI and attributes relating to QoS.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="supportedLevels" canBeNull="false"
                     comment="The set of possible QoS levels this service can provide.">
            <mal:type list="true" name="QoSLevel" area="MAL"/>
          </mal:field>
          <mal:field name="QoSproperties" canBeNull="false"
                     comment="Any QoS properties relevant to this address URIs and the specified transport.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
          <mal:field name="priorityLevels" canBeNull="false"
                     comment="Number of QoS priority levels that this provider supports.">
            <mal:type name="Integer" area="MAL"/>
          </mal:field>
          <mal:field name="serviceURI"
                     comment="The Service URI that identifies the physical location of this service. NULL if represents a shared data provider (Broker).">
            <mal:type name="URI" area="MAL"/>
          </mal:field>
          <mal:field name="dataURI"
                     comment="The data URI that identifies the physical location of the publish and subscribe interface. NULL if service does not use publish and subscribe operations or if a shared data provider is to be used.">
            <mal:type name="URI" area="MAL"/>
          </mal:field>
          <mal:field name="dataName"
                     comment="This field is used to identify a shared data provider (broker). NULL if not using a shared data provider.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Login" number="2"
                 comment="The Login service provides the facility for authentication information to be provided.&#xA;User log in with a configured role; the meaning of a specific role is mission-specific, however it is expected that a specific role allocates them privileges to invoke operations on mission operation services.&#xA;This service is closely tied to the Access Control aspect of the MAL. The Login service is used primarily to authenticate a user with an implementation-specific authentication system; the result of this is used by the MAL in all messages to authenticate sent messages.&#xA;The form in which the password is sent to the Login service provider must be agreed upon before hand and is dependent on the security system implemented. For example, most security implementations do not recommend the use of plain text passwords but rather some encrypted version of the password. For this reason the contents of the messages sent between the login service consumer and provider during authentication handshaking are implementation-specific.&#xA;">
      <mal:capabilitySet number="1">
        <mal:requestIP name="login" number="1" supportInReplay="false"
                       comment="The login operation allows a user to log in to the system. A user can log in more than once by using a different role; however, a specific implementation may place limits on the number of users that may use a specific role, and in that case will fail the login operation.&#xA;">
          <mal:messages>
            <mal:request>
              <mal:field name="opDetails"
                         comment="The operation shall take a Profile structure that contains the details of the user and role.&#xA;If the username field is either the wildcard value of '*' or empty an INVALID error shall be returned.&#xA;If the role field is either the wildcard '*' or empty an INVALID error shall be returned.&#xA;The role field may be NULL if roles are not used by the system.&#xA;The system shall verify the supplied credentials at this point, if they are not correct an UNKNOWN error shall be returned.&#xA;An UNKNOWN error shall be returned if the username and role combination do not match an existing definition.&#xA;A DUPLICATE error shall be returned if the username and role combination is currently in use.&#xA;A TOO_MANY error shall be returned if the username or role are already used and exceed the permitted maximum usage value (implementation dependent).&#xA;If the login is successful the provider should create a new LoginInstance COM object and store it in the COM archive.&#xA;">
                <mal:type name="Profile" service="Login" area="Common"/>
              </mal:field>
              <mal:field name="password">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="authId"
                         comment="The operation shall return a Blob token that is used as the authenticationId field in future messages by the MAL for authentication. The token is specific to the user and role in use.&#xA;It also shall return the LoginInstance COM object instance identifier that was created by the login operation.&#xA;">
                <mal:type name="Blob" area="MAL"/>
              </mal:field>
              <mal:field name="loginInstId">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Username/role combination currently in use.&#xA;">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Role concurrent session limit count exceeded.">
              <mal:type name="TOO_MANY" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Unknown username/role/password combination.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="logout" number="2" supportInReplay="false"
                      comment="The logout operations allows a user to log out from the system. No information is passed in the message as the MAL authentication Id is enough to identify the login.&#xA;">
          <mal:messages>
            <mal:submit comment="Upon reception of the message the operation shall remove the matched user from the set of logged in users.&#xA;No errors shall be returned by this operation.&#xA;"/>
          </mal:messages>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="reportRoles" number="3" supportInReplay="false"
                       comment="The reportRoles operation returns the list of available roles for a specific user. This operation is expected to be called before an user logs in so that the software can provide a list of possible roles.&#xA;">
          <mal:messages>
            <mal:request>
              <mal:field name="opDetails"
                         comment="The operation shall take a Profile structure that contains the details of the user.&#xA;If the username field is either NULL, the wildcard '*', or empty an INVALID error shall be returned.&#xA;The role field shall be ignored.&#xA;An UNKNOWN error shall be returned if the username and password combination do not match an existing definition.&#xA;">
                <mal:type name="Profile" service="Login" area="Common"/>
              </mal:field>
              <mal:field name="password">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="permittedRoles"
                         comment="The operation shall return a list of roles that are permitted for the user or NULL if roles are not used by the system.&#xA;">
                <mal:type list="true" name="Identifier" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown username/password combination.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:requestIP name="handover" number="4" supportInReplay="false"
                       comment="The handover operation allows an existing login context to be transferred to a new login. Two cases are expected here, the first is where a user uses this operation to change the role that they are using, and the second is where an operations context is handed over to another user.&#xA;">
          <mal:messages>
            <mal:request>
              <mal:field name="newOpDetails"
                         comment="The operation shall take a Profile structure that contains the details of the new user and role.&#xA;If the username field is either NULL, the wildcard '*', or empty an INVALID error shall be returned.&#xA;If the role field is either the wildcard '*' or empty an INVALID error shall be returned.&#xA;The role field may be NULL if roles are not used by the system.&#xA;The system shall verify the supplied credentials at this point, if they are not correct an UNKNOWN error shall be returned.&#xA;An UNKNOWN error shall be returned if the username and role combination do not match an existing definition.&#xA;A DUPLICATE error shall be returned if the username and role combination is currently in use.&#xA;A TOO_MANY error shall be returned if the username or role are already used and exceed the permitted maximum usage value (implementation dependent).&#xA;The DUPLICATE and TOO_MANY checks shall take into account the fact that current operator/role combination will be logged out after the handover operation completes.&#xA;If the handover is successful the provider should create a new LoginInstance COM object and store it in the COM archive.&#xA;The related link of the new LoginInstance COM object shall be the LoginInstance COM object that represents the previous login.&#xA;">
                <mal:type name="Profile" service="Login" area="Common"/>
              </mal:field>
              <mal:field name="password">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="newAuthId"
                         comment="The operation shall return a Blob token that is used as the authenticationId field in future messages by the MAL for authentication. The token is specific to the new user and role in use.&#xA;It also shall return the LoginInstance COM object instance identifier that was created by the handover operation.&#xA;">
                <mal:type name="Blob" area="MAL"/>
              </mal:field>
              <mal:field name="loginInstId">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown username/role/password combination.&#xA;">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Role concurrent session limit count exceeded.">
              <mal:type name="TOO_MANY" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Username/role combination currently in use.&#xA;">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="Profile" shortFormPart="1"
                       comment="The Profile structure contains details of the operator who is logging on to take a specified role.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="username" canBeNull="false" comment="The name of the user.&#xA;">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="role" comment="The role of the user.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Instances of a user login shall be represented as LoginInstance COM object.&#xA;LoginInstance objects shall be created by the login and handover operations.&#xA;The object instance identifier for a LoginInstance object shall be populated by the provider of the Login service.&#xA;If the LoginInstance object is being created during a login operation then the related link shall be set to NULL.&#xA;If the LoginInstance object is being created during a handover operation then the related link shall be set to to the object instance identifier of the LoginInstance object being handed over to.&#xA;If the LoginInstance object is being created during a login operation then the related link shall be set to NULL.&#xA;The LoginInstance object shall use the source link to indicate what object (if any) caused it to be evaluated, most likely the relevant COM OperationActivity object of a login or handover operations.&#xA;">
          <com:object name="LoginInstance" number="1">
            <com:objectType>
              <mal:type name="Profile" service="Login" area="Common"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Login" area="Common"/>
            </com:relatedObject>
          </com:object>
        </com:objects>
        <com:events comment="When a user logs in a LoginEvent COM event shall be generated.&#xA;When a user logs out a LogoutEvent COM event shall be generated.&#xA;The LoginEvent event shall use the related link to indicate which LoginInstance object is being logged in.&#xA;The LogoutEvent event shall use the related link to indicate which LoginInstance object is being logged out.&#xA;The events shall not use the COM object source link and shall set it to NULL.&#xA;The events shall be published using the COM event service.&#xA;">
          <com:event name="LoginEvent" number="2">
            <com:relatedObject>
              <com:objectType number="1" service="Login" area="Common"/>
            </com:relatedObject>
          </com:event>
          <com:event name="LogoutEvent" number="3">
            <com:relatedObject>
              <com:objectType number="1" service="Login" area="Common"/>
            </com:relatedObject>
          </com:event>
        </com:events>
        <com:archiveUsage comment="When an user is logged in by the login operation, the LoginInstance object should be stored in the COM archive by the provider.&#xA;"/>
      </com:features>
    </mal:service>
  </mal:area>
</mal:specification>